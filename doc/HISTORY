11.01.2005
Я вирішив переписати систему у Дельфі 7. Чого? Так легше компонувати. Звичайно, все у консолі. А потім, може, перенесу все під Virtual Pascal чи Free Pascal. Вже написав створення та знищення процесів.
Чого мені приспічіло? Та побачив PolitOS і понесло…

12.01.2005
19:30 - думаю, треба переробити сайт. А зараз сиджу з ядром. Пора робити мультизадачність і контейнери даних для процесів.
19:35 - ой!!! Так швидко!!! Багатозадачність працює!
19:36 - :-))) І контейнери готові.
19:42 - читаю історію створення Польоту. І паралельно пишу ядро. Прям як Цезарь!!! За спиною новини… Жах!!! Треба врубити музику, чи що… Оце думаю - як подолати фіксований ліміт процесів. Можу хоч 100000 поставити, але це ж пам'ять жертиме! Треба думати щось інше… Але це потім. Зараз треба робити шелл.
19:52 - так!!! Саме шелл. І ніякої графіки. Спочатку треба братися за щось просте. Труднощі будуть, я знаю.
20:05 - почав робити шелл. Поки написав базу. Підключати буду трохи потім. Читаю далі про Політ. Знаєте, надихає…
20:37 - дочитав. Сідаю за підключення шеллу.
20:44 - case…of не хоче працювати. Ось і перші проблеми. Стараюся фіксити.
20:49 - ні, case пролітає. Буду на if.
20:50 - перша команда test видає слово "Хелоу!" :-).
20:52 - роблю команди зупинки системи.
20:56 - зробив зупинку системи із завершенням процесів. На сьогодні все. Поліз в інет…

13.01.2005
20:32 - сьогодні свято. Але я ж працюю. Мучуся з багатовіконністю. Зробив модуль, тепер стараюся заставити його працювати. Не хоче виводити нічого на екран. Ловлю…
20:35 - працює!!! І головне, що ж було! В ініціалізації початкове значення початкової лінії потрібно ставити в 1, а не в 0.
20:41 - з виводом тексту наче розібрався. Потім робитиму ввід. А зараз робитиму сайт.

14.01.2005
7:36 - перед школою почарую над ядром трохи. Підправлю.
20:35 - доробив ще модуль багатовіконності. Реалізував переключення між вікнами. На черзі реалізація виконання процесів. Але це потім. Зараз - сайт.

15.01.2005 - після здачі МАН
15:37 - зараз буде найстрашніше - файловий ввід-вивід.
16:02 - не працює, пише про помилку 104 (файл не доступний для вводу)
16:10 - все одно не працює. Буду думати.

23.01.2005
11:20 - мабуть, зробив ввід/вивід, але ще не впевнений.
11:28 - ні, не зробив. Точніше, зробив, але не працює.
11:45 - пишу модуль криптографії.
13:46 - криптографія теж глючить. Шо за день сьодні?

26.01.2005
18:48 - пересів на Free Pascal + KDevelop в Лінуксі. Так набагато краще. I/O викручується, але вже менше. Скоро, думаю, виправлю. До речі, вже майже є команда розробників! 4 чоловіка зі мною.

28.01.2005 - є ще одна людина.

3.02.2005
13:54 - урааааа!!!!! Ввід/вивід працює!!! Запустив перший додаток!!!
19:35 - трохи оптимізував. Доробив здвиг екрану при заповненні.

4.02.2005
16:44 - трохи ще порився, додав кілька системних викликів, коментарі до процедур. Далі буду робити команду Shell'у "list".

6.02.2005
12:04 - трохи оптимізував. Передивився весь код. Додав функцію flagtostr. Доробив list.

26.02.2005
16:03 - збираюся версію 0.0.2 під UPL випустити. Реалізував деякі POSIX-виклики.

4.03.2005
18:13 - пишу з Лінукса. Реалізував основні системні виклики, зараз працюю над математикою - сінуси, косінуси… Система ж математична! Це вже буде версія 0.0.3.

5.03.2005
11:58 - трохи оптимізував модуль displays та добавив логотип при завантаженні.

8.03.2005
13:31 - по-перше, всіх жінок зі святом, а по-друге StreamOS ПРАЦЮЄ!!! Я створив LiveFloppy!!!

18.03.2005
17:48 - значні зміни. По-перше, зроблено розбиття командного рядка на частини за наявними пробілами. По-друге, почав розробку віртуальної ФС. А ще тепер система визначає доступну пам'ять. Також змінив логотип системи. До речі, підключився ще один розробник - Nobody. Готується до випуску версія 0.2 Vorskla.

19.03.2005
20:38 - сяду переглядати код.
22:11 - зробив переходи між директоріями віртуальної ФС.

20.03.2005
14:13 - зробив перезавантаження системи. Буду робити вимкнення.
15:08 - зробив вимкнення та режим очікування. Відправлю на сайт…

21.03.2005
16:58 - додав очікування перед суспендом, бо відразу після входження комп прокидався. Трохи підправив Ліцензію.

23.03.2005
16:59 - переробив ФС. Тепер буду займатися нею.

24.03.2005
11:57 - зробив монтування та демонтування.
12:24 - зробив зміну поточного диску.

25.03.2005
12:49 - дві години програвся з криптографією, яка не хотіла працювати (чого?), але зробив! Тепер працює додавання користувачів та ідентифікація їх за логіном та паролем.

28.03.2005
17:35 - зробив перетворення досівських шляхів у StreamFS та навпаки.
22:11 - мабуть, наступна версія буде 0.11.

3.04.2005
14:58 - зробив перехід від директорії до директорії та показ змісту директорії.
18:18 - зробив копіювання файлів.

5.04.2005
20:12 - зробив створення/видалення директорій, видалення файлів. ls тепер показує розмір файлів.
21:30 - зробив перегляд файлів.

7.04.2005
18:04 - почав реалізовувати цикли.

8.04.2005
15:46 - зробив цикли!!!!! Викладую версію 0.11 на сайт.

24.04.2005
12:57 - перейшов на новий хостинг, виклав нову версію LiveFloppy, пофіксив купу багів та додав створення процесів із командного рядка.

27.04.2005
13:42 - значно збільшив швидкість виводу тексту на екран, зараз пробую робити процедури. Не виходить….

28.04.2005
17:58 - довго й нудно довбався з процедурами - не вийшло. Треба, мабуть, робити лог системи. О!!! Зараз так і зроблю…

29.04.2005
16:54 - дивно, але лог нічого не дав. Хоча я локалізував баг і так.
17:12 - локалізував… і що? Щось не так із позиціонуванням даних…

30.04.2005
13:30 - знову сів за той баг… Що ж це таке?..
13:53 - остаточно локалізував той баг. Система навіть запрацювала, але у "ручному" керуванні. Стараюся фіксити…

2.05.2005
14:37 - ЙЕ-Е-Е-Е-С!!!!!!!!!!! Я знищив, роздавив, переміг той баг!!!!!!!!! УРА!!!

3.05.2005
20:10 - спробую зробити запуск функцій із циклів…
20:12 - працює!!!!!!
20:18 - буду, мабуть, робити механізм повідомлень.
20:57 - зробив. Ні, не думайте, що так довго робив. Я ще вечеряв :-). Потім робитиму події.

4.05.2005
21:48 - трохи змінив специфікацію за порадою nobody.

5.05.2005 :-)
13:17 - додав тест механізму повідомлень у тестову програму. Все працює :-).
14:02 - зробив автозапуск програм.
15:10 - приробив таку фічу, щоб при вимкненні чи перезавантаженні показувався час роботи ядра.
17:16 - nobody придумав гарну назву для бінарної мови - SOUL (StreamOs Universal Language).

8.05.2005
22:19 - обдумую, як робити події. Хай мене застрелять, але робитиму по-своєму - кожна подія у окремий файл. Треба, звичайно, трохи переробити read_string, але воно того варте і не буде заганяти у глухий кут розробників при наступній модифікації ядра.

9.05.2005
15:29 - зі святом! Зараз буду переробляти ядро, щоб можна було потім приліпити події…
15:43 - дивно, скомпілилося… Ану, зараз запущу…
15:45 - працює! Отже, тепер можна творити…
16:09 - О, є! Є-є! ПрацюЄ!!!! Зараз ще трохи перегляну та поприводжу до людського вигляду…
16:21 - все, наче, працює… Фух… Для цікавості зараз перевірю, скільки мінімум пам'яті треба для запуску StreamOS…
16:24 - близько 20-24 мег з усіма драйверами… Це ще непогано, бо я оптимізував. А раніше і 64 було мало :-). Але 24 - це нормально для 20 процесів.
17:42 - ще трохи доробив події - щоб могли нормально процедури та цикли викликатися.

10.05.2005
22:15 - подумав, як зробити перехресний виклик процедур (процедури викликаються в одній події з іншої). Приробив - не працює…

12.05.2005
16:01 - від нічого робити зараз рахую, скільки займає ядро у пам'яті за допомогою sizeof(x).
16:05 - 374 Кб самі змінні… Глобальні змінні. Хоча локальні там небагато і жеруть.

16.05.2005
16:06 - повернувся із краєзнавчих змагань. Приступаю до роботи.

20.05.2005
17:10 - годину промучився із перехресним викликом - не працює. Хоча деякі успіхи є, зокрема у оптимізації та криптуванні.

21.05.2005
12:38 - не вдається зробити той перехресний виклик. Шо за….

22.05.2005
22:33 - здається, локалізував баг. Стараюся фіксити…
22:43 - я починаю розуміти…
22:48 - а можна я матюкнуся??? Який же я був дурень!!!! Все ж так просто! Нарешті і цей баг я поборов! Була звичайна банальність у розпаралелюванні потоків - неправильна синхронізація (потоки подій мали більше часу на виконання - виконувалися повністю), а також неправильне перехрещування викликів - викликалася дальня процедура, а після її виконання відразу подія переініціалізовувалася, не очікуючи завершення своєї роботи по команді iabort. Все працює!!!!!!!!!!!!!!!!!!!
22:51 - ось тепер які плани - оптимізація. На виконання одного процесу з двома потоками витрачується 5061 такт віртуальної машини SOUL. Це триває досить довго. Отже, будемо оптимізувати.
22:54 - МИ НАЙКРАЩІ!

23.05.2005
19:39 - взявся за оптимізацію. Це буде версія 0.125.
19:50 - оптимізував fs.pp. Код поменшав на 2 Кб. Прогрес…
19:54 - ще на 1 Кб… Все той же fs.pp.
19:58 - оптимізував init.pp. Вихідного коду стало менше і зрозуміліше :-).
20:01 - оптимізував io.pp: read_string. Зробив красиво, на case…of.
20:03 - …те саме зробив із open_file…
20:06 - присобачив фічу, щоб при зупинці системи показувався головний екран.
20:08 - трохи причісую kernel.pp…
20:09 - візуально система SOUL стала працювати трохи швидше…
20:12 - підчистив код displays.pp. Crypto.pp буду перероблювати тоді, коли відшліфую нову технологію шифрування.
20:17 - познущався над shell.pp…
20:21 - шліфую syscalls.pp…
20:24 - аж приємно…
20:26 - з syscalls.pp, наче, справився…
20:27 - ну, tools.pp нічого й оптимізувати - найоптимізованіший юніт… Бо найлегший :-).
20:28 - ну все. На сьогодні вистачить.

24.05.2005
17:01 - я багато працюю, щоб під час екзаменаційної "мовчанки" все не позабувати… :-) Переробив систему шифрування. Криптостійкість паролю зросла.
17:08 - детальніше - застосував логічну операцію здвигу shl. Розмір бінарника трохи зріс.
17:25 - позамінював function на procedure там, де перші не потрібні. Вихідний код зменшився, результуючий - ні.
17:34 - пододавав коментарі у вихідні коди.

26.05.2005
17:43 - забув сказати, що змінив хостинг. Тепер на host.sk. Класно!
17:56 - додав підтримку відносних шляхів. А раніше все робило тільки на абсолютних виду /3/command.com. Зараз можна просто вказати command.com (як приклад).
17:58 - ану, перевірю…
17:59 - бінарний код збільшився на 1 кб…
18:06 - працює.
18:56 - зараз трохи перероблю механізм математики. Зроблю так, щоб операції виконувалися тільки над вмістом змінних, а не над числами. Це дає великі переваги, а кількість змінних дозволяє це робити.
19:03 - наче, працює. Благо, переробляти сильно і нічого: +-*/, sin, cos, tan. А що далі робити? Буду шліфувати SOUL. Може, ще щось придумаю.

27.05.2005
22:32 - косметичні зміни. Але щось удвічі швидше працює :-). Дивно…

28.05.2005
13:08 - виявив баги у create_process і fork_process. Сходжу по хліб і буду виправляти.
13:21 - create_process, наче, працює.
13:23 - я тут подумав, а чи потрібен цей fork взагалі? Зараз зроблю, гляну, і, може, приберу.
13:24 - ні, і доробляти не буду. Він не потрібен.
13:26 - прибрав. І код зменшився. Зараз протестую.
13:28 - зменшив код ще на 1 Кб.
13:31 - все, наче, ОК. Треба ще буде механізм повідомлень трохи переробити. Але і зараз він нормально працює.
13:34 - зробив стиснуте ядро. Архіватор - UPX. Тепер воно важить лише 57,8 Кб.

29.05.2005
11:24 - додав можливість переключення між вікнами по ALT+F2.
11:35 - видалив флаг sh_dwn. Думаю, при шатдауні системи буде виконуватися спеціальний поток OnShutdown. Так буде краще.
16:30 - додав ще один тестовий процес, на якому гарно перевіряти багатозадачність та багатовіконність. Процес у своєму вікні пише число циклу (цикл до 10000).
16:36 - прогнав на дев'яти додатках. Кількість циклів - 402841. StreamOS витримала. Це добре :-).

30.05.2005
20:27 - поновив ядро низького рівня. Покращень на око не помітно, але, мабуть, буде трохи швидше та менш глючніше.
20:58 - зробив logout. Але він якийсь непевний - за кожні два logout'и - мінус 1 Кбайт резервної пам'яті. Хоча резервної пам'яті 2047 Кб :-).

31.05.2005
20:33 - разів у двісті збільшив швидкість віртуальної машини… Чого ржете? Просто ядро намагалося виконати нестворені додатки… (із флагом s :-))…. У-у-у, розтяпа…
20:38 - тепер вузьке місце - консольний ввід/вивід. Буду щось думати…
21:00 - відчуваю, треба буде переписати displays.pp…

2.06.2005
14:58 - озадачив nobody пошуком модуля консольного вводу/виводу, а сам трохи покопався, накопав кілька модулів - сиджу, розбираюся. І ще трохи почаклував над ядром.
15:55 - почав виписувати log.pp.
16:12 - зробив логування kernel.pp. Все працює ОК.
17:56 - прогнав 20 процесів tt і 1 test - 4000219 циклів SOUL, 3:37.610 часу роботи (врахований час вводу даних). Лог нормальний. Все ОК.

3.06.2005 - екзамен по укр. мові здав на 12.
21:05 - додав у ЛівФлопі підтримку USB - драйвер шини та драйвер дисків.

6.06.2005
22:04 - трохи почаклував над logout та USB.

8.06.2005
13:52 - зробив консольний ввід (базовий, тобто тільки для керуючої консолі) через високорівневе ядро. Також трохи удосконалив вивід - він тепер швидше працює. Ну і там по ходу справи деякі дрібниці…

9.06.2005
12:43 - дві години тому почав переробляти displays.pp по-новому. Зараз він абсолютно не працює. Але я стараюся. Дуже важко…
22:24 - вже щось намічається…
22:30 - о, є!!! Сонце моє, сонце моє, люблю тебе за то, шо ти в мене є……. Вже працює нова багатовіконність!
22:53 - на сьогодні все. Залишилося зробити screen_shift, а потім оте все нове гарненько відтестувати… Ой, здається мені, що воно ще повільніше буде… Чорт з ним, не повертати ж назад. А що гнучкіше, то це точно. І, про всяк випадок, старий модуль displays я зберіг…

10.06.2005
12:10 - зробив кілька модулів displays і зрозумів, що найкраще те, що я зробив спочатку :-)…

11.06.2005
17:49 - успішно проведені випробування зі встановлення StreamOS на вінчестер. Все робилося на емуляторі VMWare 5. До речі, крім створення Installation Media, є гарна новина про те, що StreamOS запустився при 4 Мб пам'яті!!! А підкачка становила всього-то 31 Кб на тому ж вінчестері. Вітаю всіх і себе :-).

12.06.2005
13:10 - успішно доробив новий модуль displays.pp. Швидкість консольного вводу/виводу зросла. От тільки код виріс на 30 Кб (у стиснутому вигляді!) через додавання модуля classes. Чортові класи…

17.06.2005
12:51 - нещодавно Качер запустив StreamOS на фантастичній конфігурації - 386, 2 Мб ОЗУ, 700 з чимось Мб вінт. Класно!
14:45 - я трохи неправильно розрахував розмір файлу підкачки. Треба ось як: swap_size:=meminf.max_pages_in_paging_file*get_page_size;, бо інакше буде виводитися кількість сторінок. Отже, StreamOS пожирає трохи більше пам'яті… Зараз гляну… 131 Мб підкачки… Але це, мабуть, максимальний розмір. Зараз прдивлюся інші значення пам'яті.
14:51 - memory_avail:=meminf.available_physical_pages*get_page_size; Ось так ось…
18:10 - за нагадуванням товариша Бурачека, почав писати журнал ФС. З пам'яттю, наче, все ОК.
18:51 - зробив основу журналу (головні типи, ініціалізацію, 4 типи транзакцій). Зараз можна вже журналювати основні операції - відкриття, закриття, читання та запис. Відновлення поки не робив.

19.06.2005
12:11 - зробив кілька важливих функцій для роботи з екраном: procedure text_out_xy(txt:string;i,x,y:integer), str_imp(src, dest:string):string. Перша виводить текст у заданій позиції екрану, а друга (необхідна для правильної роботи першої) накладає один рядок на інший. Тобто, якщо ми маємо a:='a'; b:=' b'; і якщо зробити str_imp(a,b), то ця функція поверне значення 'ab'. Думаю, ви зрозуміли, що "прозорим" символом тут стає пробіл. Окрім того, почав малювати псевдографічне повноекранне лого. Для краси :-).

20.06.2005
12:08 - трохи доробив журналювання. Мабуть, викладу (як зв'язок зроблять :-( ) фінальну 0.13 (без явного журналювання).
18:58 - нарешті зробив визначення CD-ROM. Дякуючи PolitOS.
19:04 - працює - я перевірив, перезавантажившись з дискети. Монтує, відмонтує… Працює, одним словом.

21.06.2005
11:44 - трохи переробив SOUL-виклики для дати для того, щоб можна було визначати, скільки працює програма.
12:03 - зараз почну жорстку оптимізацію. Перше, що зроблю, це викину флаги r і p, бо воно не потрібні (активний процес буде визначатися за значенням змінної active). Їх я заміню одним флагом - present (коротше - p);
12:16 - вилучив контроль кількості циклів SOUL - це дебажна функція, яка, як я думаю, все ж, трохи гальмувала роботу. Зараз усе відкомпілюю і визначу приріст швидкості після оптимізації.
12:27 - приріст - близько 26-27%!!! От тобі й оптимізація…
19:22 - викладую 0.13 на сайт…

22.06.2005
18:51 - здав усі екзамени на 12 та 11. Прилив :-). З'явилося багато ідей :-))). А якщо серйозно, то я буду переписувати syscalls.pp, бо придумав багато нового. Насамперед, це таблиця викликів процедур, яка дозволяє відстежувати ці самі виклики та створювати вкладені процедури (процедура А викликає Б, яка викликає В…). Окрім того, необхідно буде представити конструкції типу for, if як виклики процедур. Наприклад, for викликає процедуру А 1000 разів, а if викликає Б, якщо В<Д, ну і таке інше…
18:58 - власне, таблицю я вже написав, а потім буду переписувати усе під неї.
19:23 - зробив процедури керуванням таблицею…
19:40 - зараз тестую те, що написав… Ядро ще пам'яті попросило… Але це підкачка вимкнена… Наче, все ОК. Продовжую у тому ж дусі…

23.06.2005
11:12 - змінив драйвери СіДюка, бо старі глючили. Тепер набагато краще та швидше. Із нововведеннями поки не поспішаю - усе обдумую. А поки думаю, приліпив журналювання при копіюванні файлів. Працює. І ще: побалакав тільки-но з Blaze'ом. У нього там завал із FreeOS. Ось напише листа, усе у подробицях взнаю.

24.06.2005
11:30 - отримав свідоцтво про базову середню освіту! Ось тепер цілком і повністю віддамся StreamOS. Плани по модифікації SOUL такі: зараз зроблю функцію пошуку процедур, переведу конструкцію for на виклик процедури, а потім буду робити роботу з таблицею викликів.
11:44 - компілиться… Уже добре. Пишу ще.
12:10 - половину зробив. Ану, запустю…. Не працює… Хто б сумнівався…
12:19 - десь неправильно конвертується str в int. Шукаю…
12:23 - працює! Але не так, як треба. Проблема у позиціонуванні. Треба синхронізувати позиції процедур із загальною позицією. І подумати, як це зробити краще. Отже, я на правильному шляху.
13:31 - уже щось намічається…
13:51 - якщо не вдається синхронізувати лінію процедури із лінією всього коду, то лінію процедури треба викинути :-). Що я і зробив :-))).
14:04 - процедури шукаються правильно, але не виконуються… Стараюся заставити його працювати.

25.06.2005
21:32 - ні, так я його не заставлю працювати. Я вирішив переписати абсолютно заново роботу з процедурами, що зараз успішно і розпочав…

26.06.2005
14:15 - здається, зробив процедури. Одиночна працює, а зараз перевірю вкладену…
14:16 - ги, не працює…
14:50 - працює, але дуже непередбачувано. Процедури повторюються багато разів, що мене не зовсім влаштовує…
20:01 - ………Яка тупа помилка……. Навіть писати про неї не буду….. Одним словом, процедури працюють.
20:05 - тестовий додаток викликає три процедури - одна з одної, підряд. Усе ОК.
20:16 - тепер процедури реалізовані і для іншого потоку Idle.
20:29 - кілька штрихів - і процедури готові. Далі будуть цикли.

27.06.2005
14:03 - зараз дозволю собі розслабитися та поприкручувати до StreamOS кілька дрібних фіч. Перша буде визначення швидкості компа… Дякуючи Польоту… О! Треба б Івана внести до списку подяки в about'і…
14:22 - прикрутив. Працює.
14:24 - а зараз зроблю встановлення швидкості повтору символів при вводі з клавіатури…
14:48 - присобачив… А заодно і перевірив у реальній обстановці - нічого воно не дає. Мабуть, через те, що у мене клава PS/2. Все одно, хай буде.
19:42 - похуліганю ще трішечки :-), зробивши підтримку довгих імен файлів. Ні, модуль не з Польоту, а власний, зроблений на стандартних функціях Free Pascal.
20:01 - не працює… Ну й хай - спитаю на форумі.

28.06.2005 - зі святом!!!
8:20 - почав робити цикли.
8:33 - дуже дивно, що все скомпілилось… Зараз буду перевіряти.
8:40 - не працює… Але і не викидає помилки… Шукаю…
8:42 - ой!!!! Вибачаюся!!!! То я неправильно написав файл потоку Idle… Усе працює!!!!!!!!!!!!!!! Я наздогнав поперідній модуль по функціональності.
8:49 - треба буде ще зробити можливість вкладених циклів - додати массив змінних для цикла (початок, кінець, приріст…). Але це потім, бо це не важко. Зараз відтестую цикл на швидкість на реальному компі, а не на емуляторі і скажу про її зміну…
8:56 - зменшення швидкості немає! Що не може не радувати!!!
8:58 - зараз повиправляю специфікацію, бо тепер for працює тільки зі змінними, а не із значеннями, як раніше.
10:18 - дороблюю журналювання для інших файлових операцій…
10:19 - …і причісую код…
10:35 - …і, звичайно, по ходу оптимізую…
10:38 - …прибираючи зайві змінні та функції, типу setkbd, яка не працює…
10:45 - …виправляючи парочку багів…
11:06 - виправив усе (наче), все працює - перевірено трьома тестовими додатками. Мабуть, процедури та цикли вже закінчені, з чим я себе і вітаю :-). О! До речі! Моя стаття в МК цього номеру (26)! Про етикет спілкування в інеті… Далі що? А далі, має бути, будуть конструкція if, підтримка довгих імен файлів, доробка журналювання (до речі, оптимізуючи щойно, додав журналювання до всіх операцій вводу/виводу в fs.pp, а ще треба додати до інших модулів - трохи згодом). І версія 0.14. А як Nobody напряжеться після відпочинку, то до 0.2 буде графіка. Я сам поекспериментував - до 1024x768@256 FPC може видати сам… Ну, а по ходу справи, додаватиму нові функції до SOUL. Пішов відпочивати…
14:55 - значно зменшив розмір ядра, включивши Smart Linking.
15:07 - оптимізую, міняючи integer на longint, word - на longword. Вичитав у мануалі до компілятора, що так краще для процесора.
15:18 - протестую про всяк випадок…
15:19 - дійсно, швидше! Процентів на 10-20! А потім я буду старатися опитмізувати асемблером…
17:33 - оптимізую, викидаючи оператори goto…
18:09 - повидаляв goto скрізь, окрім shell.pp - там він незамінний.

29.06.2005
9:50 - зараз зроблю вкладені цикли.
10:13 - не працює… шукаю…
10:44 - не працює… повертаю все назад і почну по-іншому.
11:01 - повернув усе назад - усе працює :-). Заодно трохи оптимізував. Буду думати, як краще зробити вкладені цикли…
12:04 - ще раз передивився код, дещо підправив, нового не вносив нічого.
12:25 - переробив вирахування швидкості компа - зробив калькуляцію квадратного рівняння замість сінуса. Квадратне рівняння має вигляд: 5x*x+7*x-20=0.

30.06.2005
9:23 - написав власний модуль сортування… Здається, схожий на BubbleSort.
11:37 - зробив показ таблиці символів та перетворення UPCASE->lowcase (власна функція) для командного рядка.
12:24 - можна ось ще як оптимізувати - якщо немає файлу потоку Idle, то його не треба виконувати, а, отже, не забирається часовий ресурс SOUL. Зараз таке і зроблю.
12:36 - у мене неправильно зроблена функція створення процесів. Тільки-но написав: run kazaa. Процес kazaa був успішно створений і виконувався не менш успішно :-).
12:49 - а, ні - то був глюк функції відкриття файлу - не визначалася помилка відкриття. Уже все ОК.

3.07.2005
11:18 - створюю файл, у який буду записувати те, що StreamOS не може поки що робити.
18:36 - зняв обмеження на 80 символів у рядку коду програм та на 20 символів у назві програм. Трохи більше пам'яті жере, але без цього не працювали б повідомлення довше 80 символів, а зараз - 256.

5.07.2005
11:09 - оце дійсно прорив! Я зняв обмеження на розмір процесів! Це відразу знімає основну претензію людей до системи. Зараз протестую на "жратву" пам'яті.
11:11 - …класний час… :-) А якщо серйозно, то два процеси жеруть пам'яті аж 4 Кб! Явна економія… Зараз спробую трохи підняти планку кількості процесів і подивлюся як це відобразиться на пам'яті…
11:14 - було 1824 Кб вільно, зараз - 1324. Додано 12 процесів… Отже, на 12 процесів 500 Кб пам'яті… Уже набагато краще!!! А на один процес……. приблизно 42 Кб… Відмінний результат. Ну і плюс сам код… Отже, якщо процес розміром 84 строчки коду займає 4 Кб, то… Вже не так райдужно, але краще, ніж у Вінді (я так гадаю). Ну, батечку, на неї і рівняємось :-))))))).
11:21 - о! Ще краще! Після створення перших двох процесів пам'ять вичерпується дуже повільно! Тобто два процеси уже не займатимуть 4 Кб, а набагато менше 1 Кб! Вінда в прольоті :-)…
13:12 - ще трохи доробив повідомлення - текст вантажиться тепер із змінної.
13:13 - може, закинути те, що зараз є на сайт як 0.14b1? Мабуть, так і зроблю… А на фінальну 0.14 зроблю Installation Floppy. Він і зараз є, але закидати я його не буду - трафік жалко :-).

6.07.2005
10:20 - учора закинув 0.14b1 на сайт, а сьогодні трохи переглянув код.
11:23 - 32 процеси, 1920688 системних викликів, 3 хвилини 43.769 секунди. Чудово.
16:50 - зробив можливість виклику останніх 16 команд по номерам (0..15).
16:56 - ті самі 32 процеси, але тільки 3 хвилини 43.109 секунди. Трохи швидше, бо я оптимізував (наскільки швидше, настільки і оптимізував :-))).

7.07.2005
13:15 - приклепав модуль сортування символьних рядків (tstringlist), і тепер ls видає файли у сортованому вигляді.
21:04 - прийшла у голову ідея з приорітетами. Буду думати, як саме це реалізувати.

8.07.2005
9:50 - зробив приорітети, але трохи не так як думав… Я думав формувати чергу, у яку записувати скільки кого виконувати… Аж тут подумав - ядро і так неформально формує чергу, то чого б не взяти, та не повторити системні виклики стільки разів, скільки вказано у приорітеті… Ну, повторив… Виходить, чим більше приорітет, тим більша швидкість роботи…
10:05 - …і наскільки більша!!! Якщо приорітет 5, то у чотири рази! А якщо десять, то у вісім…. Е-е-е… Цікава залежність… Тільки при збільшення приорітету, зменшується реагування ядра і, виходить, час (о! вже розглядаю час як ресурс!!!) розподіляється ривками… Початковий приорітет поставлю 5 або 10 - зараз протестую і побачу який саме…
10:11 - а, може, 20? :-)))
10:14 - хай буде 20. Як що - зміню.
10:25 - точно, 20. Хай так і буде. 32 процеси tfor на реальному компі виконувалися 7.529 с. От тобі і фізика ядра!

10.07.2005
14:23 - зробив динамічні приорітети (опціонально вмикаються/вимикаються). priority:=20 div count. Думаю, все ясно.
14:28 - за змовчуванням ця фішка вимкнена, бо трохи гальмує роботу. Але… Хто-зна… будуть випробування - я гляну, чим краще…
14:32 - а випробування показали ось що: 10 процесів при відключених динамічних приорітетах - 7.360 секунди кожен. Якщо ці самі 10 процесів та при включених динамічних приорітетах - 4.5 секунди перший…. (не варто радіти)… а останній, 10-й - 20.381 секунд… Отож…. Я навіть не знаю, чи залишати цю можливість… Ось перероблю створення процесів, а там побачимо… Ну все, іду у відпустку… Ненадовго. 1 вересня знову поновлю активну роботу. А поки - як час буде.
18:53 - знаю, чого такі результати: бо я не перестраював приорітети для всіх процесів після додавання нового. Ото тому…
20:57 - переробив створення процесів (хай мене поб'ють, але зробив так, як простіше - з операторами goto).
21:05 - динамічні приорітети тепер працюють правильно, але, внаслідок того, що для 10 процесів приорітет кожного = 2, то і виконуються вони по 26.141 с, проти 7.200 при фіксованих. Треба трохи змінити формулу визначення…
21:14 - для динамічних приорітетів мінімум 10, максимум - 100. Протестую….
21:34 - вже краще - 10 процесів за 10.219 с. Так хай і буде…

11.07.2005
12:29 - пофіксив баг із динамічними проиорітетами - не перебудовувалися приорітети після знищення процесу.
12:31 - виправив незначну неточність при визначенні швидкості компа - виніс присвоєння змінних до ініту таймера.
12:35 - змінив назву функції if_correct_integer на correct_integer.
12:38 - трохи причесав код (виявляється, можна робити так: b:=i=0, що значить if i=0 then b:=true else b:=false).

20.07.2005
12:34 - я вже вдома і поновив роботу.
13:05 - зробив: переривання копіювання файлів по CTRL+D, тепер не *_idl, а *.idl - так зручніше, зробив новий тестовий додаток на тестування text_out_xy, додав відповідні виклики, виловив парочку багів.
13:39 - зробив свої аналоги функцій файлового вводу/виводу (усе як треба - журналювання, контроль помилок…), а тепер робитиму так, щоб усе ядро через ці функції і працювало…
13:47 - е-е-е… Якийсь баг, не зв'язаний із вводом/виводом. Мабуть, у displays.pp…
13:52 - та ні, зв'язаний… тьху, зараз буду по крокам дивитися…
13:55 - попався, readln! Тільки чого ти не працюєш?..
13:56 - а, ну звичайно… У декларації функції перед змінною треба вказати var…
13:58 - працює…
14:00 - треба ще перетворення імен із SFS у FAT…
14:09 - зробив… Далі продовжуватиму підводити все під fs.pp…
14:10 - звичайно, усе буде так, як і раніше у функціях журналювання, які будуть використовувати "прямі" функції… А для користувача нічого, власне, не зміниться.
14:17 - тепер так працює показ файлу… До речі, вітаю: у нас код уже розрісся більше ніж на 3000 рядків.
15:42 - клята гроза перервала усю роботу… Доробив файлові операції через fs.pp. Подумав зробити постійно відкритим файл журналу, але… Ну його… Хай буде таким, як є. Поки що.

25.07.2005
21:53 - щось я розлінився… Тільки-но почав писати перевірку ФС по журналу. За сьогодні, може, і не напишу, але взагалі-то напишу…
22:09 - зробив сповіщення про можливі помилки. Програму для перевірки ФС буду писати на SOUL. Потім.

26.07.2005
12:43 - зробив копіювання файлів через fs.pp, через окремі функції. Тестую…
12:45 - падає при завантаженні… Чого?
12:59 - падаємо при ініціалізації…
13:03 - неправильний порядок ініту…
14:28 - нічого не розумію… Не працює fs.pp ВЗАГАЛІ… Переписувати заново? Прийдеться, але тільки частину I/O.

27.07.2005
9:11 - прибрав журналювання та централізований I/O - і, прикинь, запрацювало! Не гавкай, журналювання буде. Але потім. І у вигляді низькорівневого драйвера, який перехватить 13-те переривання.
12:25 - виявляється, Free Pascal має бібліотеку архівування gzip! Я переробив демо-приклад на юніт, який скоро підключу до StreamOS.

9.08.2005
18:55 - приїхав із табору. Добре, що прочитав історію - тепер знаю, що робити :-).

11.08.2005
13:06 - продвижки з Ліцензією - 2.0 виноситься на публічне обговорення.
18:10 - експерименти показали, що бібліотека стиснення gzip буде використовуватися при встановленні системи. Це - найкращий варіант.
18:11 - за порадою Nobody, почну створювати таблиці функцій.
18:18 - ось як: константами. Так займає більше пам'яті, а працює швидше.
18:37 - поновив Installation Media. Скоро, мабуть, викладатиму на сайт.

13.08.2005
9:37 - щось мені мало віриться, але цикли за новою системою, начебто, працюють. Зараз тестуватиму…
9:39 - таки ж працює. Але це одинарні цикли. Вкладені - не знаю. Мабуть, ні (буду прагматиком і готуватимусь до перебирання коду…)…
9:45 - таки не працюють вкладені цикли… Але вже буде легше. І для 0.14 (самозаспокоєння :-) вистачить.

14.08.2005
11:44 - готую до випуску 0.14. Зробив усі образи. Закидатиму на сайт.

18.08.2005
12:18 - почав реалізацію 0.15 Stable. Уже в основному зробив подію OnKey.
12:45 - подія OnKey зроблена повністю.

21.08.2005
15:08 - передивляюся код. Знайшов баг - при переключенні на головне вікно випадаємо… Буду шукати.

22.08.2005
18:41 - намітив деякі плани - трохи змінити концепцію - представляти ядро як процес… Побачимо.

25.08.2005
10:33 - переробив сортування. Дякую eXz.

26.08.2005
15:07 - переробляю SOUL так, щоб усі оператори ішли в один рядок, а не розбивалися на кілька. Виходить…!
15:21 - зробив! Ой, як же гарно вийшло!
16:31 - зробив ядро так, щоб виглядало, як процес (щоб посилати повідомлення та ін.). Бага того не виловив. Буду ще думати.

31.08.2005
14:23 - я доробив сайт (укр/рос повністю). Також зробив буфер повідомлень (на maxvarcount комірок). Тепер можна надсилати повідомлення, не боячись того, що воно затре поперіднє повідомлення. Принцип дії - First In - Last Out (FILO). Можна і FIFO зробити. Це вже далі подивимося. Ну і приємні новини - 1) Іван Козак згадує StreamOS і мене на своєму сайті та в історії створення Польоту; 2) - на нас посилається новостворюваний каталог ОСей (dir.osrc.info). Завтра до школи :-(((.

3.09.2005
20:42 - буду починати тестувати динамічне створення процесів.
20:56 - наче, нормально. Може, до 0.15 приробити динамічне створення процесів? Це зніме обмеження у maxprocesscount процесів. Але додасть нові трабли з пам'яттю.

6.09.2005
15:48 - Іван прислав новий дизайн сайту. Скоро використаю :-).

8.09.2005
22:36 - частково переробив сайт (тільки українську - російську частину завтра). Кльово вийшло! Дякуючи Івану, звичайно :-). А зараз спати…

9.09.2005
21:16 - сьогодні доробив сайт і виклав на сервер. Класно! Іване, ще раз дякую!!! А тепер трохи про StreamOS власне. Зараз плануються такі речі: динамічна таблиця процесів, розширений модуль математики, графіка. Зараз я чекаю на графіку - у Nobody є певні заминки, але, судячи з його проблем, проблеми такі, які можуть виникнути тільки при великій кількості зробленої роботи (фух, оце загнув…). Чекаю на графіку…

10.09.2005
16:22 - я в шоці! В повному шоці! Оце так сюрприз! Nobody сказав, що у нас є сайт на домені org.ua! Ото так! Ось деталі у нього взнаю…
17:08 - переробив механізм повідомлень. Тепер хто перший зайшов, той перший і вийшов - FIFO. І, по ходу, кілька виправлень, у тому числі у модулі users.pp.

13.09.2005
21:00 - монітор згорів! Сиджу на чужому (напрокат взяв для другого компа). А так… Ну, залив сайт на сервак, тільки-но прокоментував код (ще треба буде докоментувати)…

16.09.2005
21:29 - бийте, не бийте, але я прибрав роботу з цілими типами даних із SOUL. Залишив extended. Швидкість не змінилася, а час покаже. Поновив сайт. Роблю pi-calculating.
21:38 - Є!!!! Я зробив програму для калькуляції числа pi! Розмір - 443 байти (чистий код, а я ще буду усякі повідомлення додавати туди…).

17.09.2005
9:54 - трохи оптимізував: замість того, щоб переносити результат обчислень певної функції з нульової змінної до певної змінної, тепер можна робити так: + 1 2 3, що значить: додати значення змінних 1 і 2 та помістити результат у 3-ю змінну.
10:10 - трохи доробляю консольний і/о.
12:08 - у результаті оптимізації SOUL швидкість зросла… е-е-е… на кожні 4 секунди виконання важкого у відношенні змінних додатка приходиться 0.5 сек економії. Зрозуміло? Так, це значущо. Ну, наприклад, додаток виконувався б 86400 секунд, а зараз виконувався б… (напряжу мозок і Калькулятор :-))… 75600 секунд, а нормальними словами - замість 24 годин лише 21. Отож…
21:00 - доробив консольний і/о (тепер можна виводити на екран розділяючий символ |). А ще додав можливість обнуляти значення тиків ядра - just for fun :-).
21:25 - додав можливість використовувати описові файли для програм - "*.dat". Такі файли можуть містити описи програм, назви, авторів, версію… Зараз можна там писати лише назву програми, яка і буде визначальною у системі. А ще для приколу статистика - усі 7 тестових додатків дають 260155 тиків ядра, виконуються 8.349 с на VMware.

18.09.2005
11:24 - перебудував залежності модулів - менше видається хінтів при компіляції. А також додав параметри програм. Зараз буду тестувати.
11:36 - працює. Тепер залишається додати функції по роботі з параметрами у SOUL.
11:47 - доробив. Зараз дороблю тестовий додаток.
11:53 - доробив і тестовий додаток. Усе працює. Зараз сяду за специфікацію.
20:15 - допідправляю специфікацію (те, що не встиг), водночас трохи підганяю певні функції віртуальної машини під специфікацію.
20:20 - доробив.

19.09.2005
17:04 - нарешті знайшов той баг!!! Нагадаю: при перемиканні на нульовий екран при виконанні процесів ми падали. А тепер ні! Ось чому: виконання OnKey проводилося навіть тоді, коли процес мав iskey=false. Досить поставити додаткову перевірку у execute і падати ми перестали. Ось так! Ось тобі і 0.15 Stable!!! До уваги: тепер перемикання між процесами по SHIFT+TAB, а переривання - по CTRL+BACKSPACE (обрав таке, щоб не конфліктувало з іншими клавішами з однаковими скен-кодами).
17:09 - викладу на сайт 0.15b1.
17:48 - ось що ще придумав - таблиці кодування. Під KOI-8R є, вже й тестову прогу написав.

21.09.2005
12:55 - а тепер конкретно, що треба ще реалізувати: 1) перебудова файлової системи; 2) доробка SOUL для роботи з вкладеними циклами та для інших конструкцій; 3) розширення математичних функцій. У перебудові ФС я вбачаю зміну структури каталогів та принципу монтування інших дисків та пристроїв. Усі пристрої будуть знаходитися у dev. Папка sys - вмістилище дров і всякої подібної нечисті. Ну і т. д. Я пропоную відмовитися від нумерації дисків та використання слеша /. Натомість (щоб було простіше) користуватися буквенними позначеннями, як у DOS.
13:22 - викинув StreamFS нафіг усе! Навіть монтування! Зараз зміню структуру каталогів і все буде ОК. От і я те саме подумав - нащо було велосипед винаходити?..
13:50 - змінив структуру каталогів. Тепер \sys\log - лог, \sys\driver - дрова, \home - домашні каталоги, \apps - додатки. Файл автозавантаження autorun.saf свій для кожного юзверя.
14:12 - зробив видалення юзверів (не повністю каталог, а лише головні файли) та почистив код.
14:14 - поки все. Перший пункт виконано.
14:46 - все ок, крім одного - дрова на сідюк. Глючать, гади! Значить, або шукати інші дрова, або DR-DOS…
14:47 - плюс статистика - час виконання на реальному компі Cel1300@1400: tpi - 1.2 с, tt - 0.331 с, tfor - 0.55 с.
20:23 - ще плани: додати можливість передавання параметрів ядра (типу, відеорежим, у планах - скрипт ініціалізації і тому подібне…).
22:01 - написав новий файл join, де я та Nobody звертаємося до тих, хто хоче приєднатися до нас…
22:20 - додав визначення мітки диску, але почав вискакувати баг при вимкненні системи… Буду шукати…

22.09.2005
16:10 - гарна штука бекапи! Відкотився трохи - і все компілюється і працює. Щоправда без міток диску :-). Неважливо, адже все інше ок.

25.09.2005
11:51 - виправив кілька помилок із шляхами.
13:04 - шось не хоче fpc на ДОС ставати. Щоб не прийшлося на другому компі Винь ставити… До речі, треба прибрати дрова під USB з Лів-Флоппі - вони там нафіг не потрібні.

26.09.2005 - ДЕНЬ ПРОЗРІННЯ
18:47 - я прозрів. Ні, у гарному сенсі. Я тепер точно знаю, що Лінукс для десктопів не готовий. "Женіться, хочте - не біжіть, і не доженете ніколи"….. Я поставив Лінукс Мандраке 10.0, а після нього Вінь2000. Останній разів у 10-20 швидше працює… Робіть висновки (висновки для старих компів - типу K6-2-200/64/512, за новіші я ще можу подумати). АЛЕ: Я не проти вільного ПЗ. Я проти того, що зараз твориться з ядром Лінукса. Це ж повний безлад! Нема автоконфіга ядра (хоча б скриптового), нема нормальної інфраструктури завантаження, нема загальних стандартів… Ось так. Звідси усі біди - а як, а чого, а там же (самі_знаєте_де) одним кліком робиться… Ай да Мікрософт! Шоб той Гатес живий був!
19:29 - перша реакція на вищесказане Бурачека: "Ти захворів?". Мабуть, мене несе… Ну, а далі його понесло…
19:32 - СТОП!!! Не відволікатися… StreamOS… Ах, так. Виправлення кількох багів дало змогу завантажувати StreamOS із будь-якого каталогу, а не тільки з кореневого. Далі буду мучитися з наступними пунктами: математика, SOUL.
19:40 - хі-хі. Дивно… У мене в історії після 30.05 йде 2.05 :-). Хоч повиправляю.
19:42 - а після 27.05 - 28.08, а потім - 3.07 :-). Машина часу :-).

30.09.2005
13:46 - дописав UPL 2.1, переклав на українську мову. Довбаюся з тим компом - не хоче модем працювати. Хоч би не згорів був… Модем, в смислі…
15:48 - виправив недоробку зі шляхами…
16:14 - тимчасово прибрав керування приорітетами, бо перероблятиму їх заново.

1.10.2005
18:56 - частково зробив приорітети. Тепер вони вираховуються на основі швидкості машини. А ще змінив емулятор - тепер Bochs 2.2.1. Прикольний.
20:56 - я тут подумав, що динамічні приорітети не потрібні. Ні, автовизначення хай буде - це корисно для оптимальної швидкості. А от динамічно змінювати в залежності від навантаження на комп - це не потрібно, бо тоді втрачається гнучкість виконання. Тема приорітетів закрита (поки що).
21:15 - тестування: 12 процесів tt працюють помітними ривками. Вже ж і не знаю (приорітет 58 кожного). Менше - менша швидкість, більша - бачили б ви, як воно робитиме…
21:18 - треба трохи прикрасити та підформатувати вручну код…
21:30 - вніс подію OnKey у залежність від приорітету. Тепер, після виправлення кількох багів, вже не вискакує якась помилка.
21:35 - почав виписувати підтримку параметрів ядра.
21:45 - зробив вимкнення логування ядра (опція nolog).
22:00 - зробив визначення загальної кількості пам'яті, але воно чогось не так визначає… Може, через емулятор? Зараз попробую на ВМварі…
22:20 - там те саме. Гм… подумаю… А зараз спати…

2.10.2005
10:00 - почав робити встановлення відеорежиму через параметри. Виходить. Але ще треба буде помучитися…
10:28 - все, наче, ок, але здвиг екрану все-одно на 24-му рядку робиться…
21:38 - остаточно пересів робити StreamOS на той другий комп (оце ж і пишу з нього :-). Нарешті, запрацював COM-порт. Оказується, існують різні розпайки порта (навхрест та підряд). Так от, у мене було навхрест - не робило. Перепаяв на "підряд" - працює :-). Ну то "лёд движется, господа разработчики, лёд движется…".

4.10.2005
20:35 - запустив StreamOS на 8-мипроцесорному компі. Віртуальному :-). Швидкість та сама. Зараз трохи перероблю визначення приорітетів, бо на цьому компі приорітет 2 (14000 квадратних рівнянь за секунду).
21:17 - оптимізував алгоритм вираховування швидкості проца. Прибрав змінні, залишив одні числа (ну, це логічно - щоб до пам'яті не звертатися, а зразу…). Тепер у нас швидкість не 14000, а 35000 :-).

6.10.2005
16:53 - змінив UPX до 1.25. Трохи краще.
18:10 - переробив виклик перших процедур у всіх подіях і потоках. Тепер записи про перші процедури зберігаються у таблицях процедур, а не у таблицях процесів. Код менше, швидкість - незмінна. Зате легше буде розбиратися. Прикинув repeat-until. Можливо…

8.10.2005
21:49 - нарешті запрацювала мережа. Ні, не в СтрімОС :-). А між двома компами. На цьому компі не хотіло працювати через звукову карту. Прийшлося звукову карту витягати. Зміню на ISA-шну. Щодо Стріма - чекаю на результати від Nobody.

14.10.2005
9:45 - приїхав з Криму. Стараюся під'єднатися до інету, щоб взнати що-небудь від Nobody.
10:10 - почав робити repeat. Не працює.

16.10.2005
12:00 - repeat працює! Буду тестувати та доробляти.
12:51 - на основі repeat зробив прогу, яка може друкувати на екрані текст, який користувач вводить з клавіатури. Такий собі термінал. Власне repeat зараз дороблю і напишу тестову прогу.
13:21 - repeat готовий. Правлю специфікацію.
13:25 - наступний крок буде спрямований на приведення до порядку математичних функцій, щоб вони могли додавати різні типи даних.
13:30 - також працюють вкладені цикли. Без емоцій.

17.10.2005
17:27 - класні фотки з Криму будуть - отримав плівку. А зараз перероблятиму основні арифметичні функції, щоб для різних типів даних…
17:38 - зробив.

18.10.2005
21:14 - похімічу трохи з сайтом.

19.10.2005
21:09 - похімічив із сайтом, але ніяк залити (клятий зв'язок). І, нарешті, маю звук на цьому компі. Слава ESS!

20.10.2005
21:21 - поки що прибрав роботу з відеорежимами. Для надійності.

21.10.2005
18:40 - добряче почистив код, що стосувався пам'яті. Поки він не потрібний.

22.10.2005
13:10 - оптимізував syscalls.pp. Не скажу, що швидше, але менше і зручніше - точно. Крім того, почав доробляти repeat, щоб він міг працювати з різними змінними.
13:37 - нарешті можна дивитися, скільки часу РЕАЛЬНО працював кожний додаток.

23.10.2005
13:49 - repeat з різними типами змінних працює. Залишається дописати код для всіх потоків…
13:51 - неважко й заплутатися… Треба кинути кілька коментарів…
14:04 - для Idle також є. Я не вручну - просто в AkelPad заміну…
14:24 - працює. syscalls.pp розрісся до 43.2 кб!
15:02 - зробив kill_all. Також зробив так, щоб значення змінних виводилося на екран однією командою - vartoscreen з додатковим параметром типу змінної.
15:07 - копіювання змінної у змінну зробив так само.
15:23 - …і внесення даних у змінну теж… Наче, все працює.
15:28 - фінальний акорд на сьогодні - змінив специфікацію.
16:37 - оце перечитую історію. Аж цікаво - колись streamos.exe був 57.8 кб, а зараз 57.1 кб… Так скільки ж всього додалося!
16:43 - продовжуючи читати, думаю, що треба Idle виконувати тільки тоді, коли процес призупинений. Подумаю, як його краще зробити і таки ж зроблю…
18:14 - викладу на сайт 0.15b2.

24.10.2005
13:44 - виклав на сайт бету 2. Зразу ж після того знайшов баг у kill_all, make.bat. Виправив.
13:47 - зробив натуральний Idle. Тепер цей поток працює лише тоді, коли основний поток нічого не робить і викликає pause. Тоді виконується Idle (приорітет виконання той самий), а як тільки треба розбудити основний процес - викликається unpause. Все просто.
13:56 - створив тестовий додаток для Idle. Почергово виконується Idle та головний поток, передаючи керування один одному.
14:00 - по плану буде конструкція if. Подумаю, як краще її зробити і зроблю… О! Ще ось що! Треба ж OnKey виконувати завжди, а не коли flag=p. Зараз перероблю…
14:06 - переробив, протестував - працює.

25.10.2005
12:22 - почав робити if. Працює. Плюс до того треба буде у repeat внести подвоєні знаки: <=, >=, <>.
12:29 - для головного потоку if зроблено.
12:43 - сподіваюся, if зроблено повністю. Зараз відтестую…
12:46 - таки ж працює. А syscalls.pp виріс до…65.3 кб…
12:56 - після чаклування на repeat (див. вище) розмір виріс до 84 кб… А загально коду 148 кб або 3984 рядки. Розмір ядра 59500 байт.
13:15 - відтестував, начебто працює. Можна beta3 випустити…
14:20 - виклав на сайт. А тепер зрозумів, як можна ловити виключення (exceptions). Надкорисна штука!
15:05 - граюся з виключеннями. Не всюди чомусь вони спрацьовують, але штука цікава і корисна.
15:08 - …і дуже капризна… Обійдемося поки без неї.
15:11 - що зробити: оптимізувати fs.pp, знайти чому exit при count=0 не працює.

26.10.2005
13:17 - баг з exit прибрав.
13:28 - потихеньку ввожу механізм захисту від "поганих" програм…
13:33 - все одно ядро падає, але вже пише чому. Я знаю, чому воно падає. Бо виконання проги переривається destroy_process і ядро далі виконує вже неіснуючий додаток.
13:38 - не вдається зробити, щоб ядро не падало. Але ж це і не баг ядра…
13:40 - оптимізував fs.pp. Тепер їду в Комсомольськ, де буду вчити автосправу і думати над захистом від "поганих" програм… Буду 29-го.

29.10.2005
18:03 - я вдома. І з новими ідеями. Найосновніша: переробка таблиці процесів. Щоб можна було додавати модулі без ускладнення коду: ввести масиви. 1 - головний, 2 - Idle, 3 - Key, 4 - ще_щось… Зараз почну…
19:34 - переробив, але тепер навіть не вантажиться! І мучатися не буду, повернуся назад і буду думати…
19:41 - ще раз кажу, що бекапи - гарна штука…

30.10.2005
21:03 - не можу зрозуміти, чому не вантажиться перероблене ядро… Взагалі! Навіть без звернення до перероблених частин (без ініту). Тупо щось в своп кидає…

31.10.2005 - Хелоуін :-)))
16:32 - роблю підготовчу роботу до переробки (див. вище). Зараз зняв пакування packed record.
16:34 - дивно, параметри процесу передаються двічі… Прибрав…
16:56 - запустив StreamOS з-під DR-DOS. Враження кращі, ніж від FreeDOS.
17:15 - поспішаю заявити, що у нас ВЕЛИЧЕЗНІ проблеми. Перероблене ядро ні за яких обставин не працює. Буду, значить, переривати весь код і шукати причину. АЛЕ Я НЕ ЗНАЮ ПРИЧИНИ!!!…

1.11.2005
17:09 - так. Які думки? Ніяких… Реальних причин я не бачу. Ну, по-перше, неправильний ініт відпадає відразу, бо я його відключав. Друге: низькорівневе ядро, від мене не залежне, але і не причетне, бо я пробував і FreeDOS, і DR-DOS. Третє: баг Фріпаскаля. Отут дійсно щось реальне, бо у мене куча структур і масивів і, можливо, щось десь не так… Четверте: я дурень. Це виключено :-). Отже, два єдиних варіанти: щось таки не в порядку з кодом, або з компілятором. Що це може значити? Якщо я не знайду помилку в коді (і Nobody, якщо розбереться :-)), то це до доброго не приведе. Можливий перехід на Virtual Pascal. Але ж Фрі - найкращий! Це не може бути він… Значить, найвірогідніше - код. Буде багато роботи… Для чого його взагалі міняти, спитаєте? Скажу - 1) від самого додавання конструкції if та repeat код syscalls.pp виріс утричі!!! Ви уявляєте, якщо я ще щось додам у такому ж дусі? Хто буде розбиратися у мегабайтах коду? І як він працюватиме? 2) план переробки передбачає можливість підключення модулів до програми. Ну, наприклад Quake 3 буде бібліотеку OpenGL підключати :-)) (чого сміюсь? а то не знаєте…). Буде це виглядати так: вантажиться Квака, шукає файл opengl.mod, завантажує його і "качає" звідти усі функції, які треба. Все… Цих аргументів має вистачити… Отже, будемо працювати…

2.11.2005
20:16 - …оце вже цікаво… Списки кількості процедур пройшли. А разом із списками самих процедур - не йде… Підозра на недостачу пам'яті…
20:25 - так і є! Обмежив кількість процесів до 10-ти і все працює!!! Працюємо далі…
20:57 - …працює…
21:00 - …навіть з 32-ма процесами. Ввів нову регулюючу константу - кількість модулей. Зараз вона рівна 3-м: головний, Idle та OnKey.
21:02 - …після такої напруженої роботи треба трохи перепочити. Залишилося ось що: трохи "доконати" модульність (поприводити до порядку ініт та керування процесами) і пошукати баги. От і буде 0.15rc1.
22:08 - наче, що думав, те зробив. Далі буду ретельно перевіряти…
22:12 - для статистики: розмір таблиці 32-х процесів: 845 Кб, розмір таблиці процедур (3 модуля, 32 процеси): 2578 Кб (саме так, цифри правильні); 2971 рядків коду, 100786 байт коду (розмір syscalls.pp набагато зменшився після переробки і складає 36087 байт (у 2.5 рази!). Ядро має розмір 58240 байт. На сьогодні все, завтра буду продовжувати перевіряти і готувати перший кандидат-реліз: 0.15rc1.

3.11.2005
19:16 - трохи доробив пошук процесів.
19:19 - …і причісую специфікацію…

4.11.2005
20:29 - трохи оптимізував у розмірі табличні структури ядра, щоб менше пам'яті жерли.

6.11.2005
16:16 - викладую на сайт 0.15rc1.
17:22 - ага, неточність. Треба зменшувати приорітет, коли flag=term, інакше для OnIdle відводиться багато часу.

7.11.2005
20:10 - зробив так, як треба (сподіваюся…) приорітети. Тепер вони вираховуються ось як: загальний приорітет на основі швидкості компа, він же назначається за змовчуванням основному потоку процесу; OnIdle має приорітет 1 (найнижчий), а OnKey - приорітет основного потоку, помножений на 3 (найвищий приорітет, надалі буде встановлюватися для всіх системних подій). Зберігаються приорітети у масиві - одна клітинка для одного модулю. Протестував - відношення часу стали на свої місця.

9.11.2005
19:04 - виправив баг у text_out_xy, написав прогу, яка показує, скільки який процес виконувався (у системних викликах), трохи перероблю vartoscreenxy і echoxy, щоб координати бралися із змінної.
19:34 - начебто, доробив, начебто, працює. Зараз поставлю на тестування і піду їсти :-).
19:47 - 109281 тик. Щось мало "натикало". Або я швидко поїв :-). Все, наче, працює.

10.11.2005
18:49 - трохи переробив та доповнив сайт.

11.11.2005
16:46 - учора ще виклав на сайт ЛівФлоппі. Бо ж структура ФС змінилася. А ще Nobody нарешті прислав демку і коди графіки. Цікаво. Розбиратимуся.
16:52 - глючать дрова сідюка. Здорово глючать. На емуляторі ще нічого, а на реальному компі висне. Значить, прийдеться прибирати і шукати нові.
17:16 - відтестував систему на реальному компі. Швидкість: 9536327 квадратних рівнянь за секунду, приорітет процесу: 2384. Час виконання: tfor - 5 сек, tinfor - 37 сек. Ось висновки: неправильне виконання процесів. За такого приорітету дуже помітне те, що процеси виконуються ривками. Значить, необхідно обмежити приорітет.
17:28 - треба змінювати механізм приорітетів. При додаванні нового процесу необхідно зменшувати загальний приорітет. І навпаки.
18:15 - обмежився поки що обмеженням максимального приорітету до 24. Але ж далі зроблю не так. А ось як. При кожному циклу ядра, воно буде формувати чергу процесів. У цю чергу будуть входити усі створені процеси та їх потоки. Процеси і їх потоки виконуватимуться вроздріб. Як саме вроздріб - ще не знаю. Ну, може випадково. А, може, якось визначено. Мабуть, треба буде зробити так: першими у черзі стають потоки (саме потоки) з найбільшим приорітетом (це події типу OnKey, сортовані відповідно до приорітетів процесів), і далі по спадній (основні потоки, сортовані теж по приорітету і OnIdle, сортовані по приорітету процесів). Мабуть так. Тоді будуть виконуватися події, для яких треба найшвидша реакція ядра, далі - основне, а далі - що залишиться. Я ще подумаю, як це краще реалізувати, і реалізую. Не обіцяю це у 0.15. Але до 0.2 - 100%. Будемо працювати…
19:48 - ні, не чергу! Буду так: процеси виконуються послідовно, на кожен виділено n мілісекунд (десь орієнтовно 20). З цих 20-ти буде десь так: 10 - основний поток, 7 - OnKey, 3 - OnIdle. Якщо якийсь із потоків не використовує весь час, то цей час передається наступному потоку. Якщо ж у цілому весь процес не використовує відведений квант часу, то цей квант "згорає" - іде у Idle ядра. Ось як буду робити…
20:48 - поновив upx до 1.93. На око ніяких змін.
20:01 - …чогось поперло… Викинув усі приорітети, замінив їх часовими квантами. ПРАЦЮЄ! Зараз буду доробляти та дивитися, що воно буде.
21:09 - начебто, привів до порядку. Але треба тестувати на реальному компі. І коригувати значення квантів.
21:21 - привів до порядку ініт та початкове завантаження.
21:33 - відтестив на реальному компі. Вже краще. Але при великій кількості процесів усе одно ривками. Буду ще мудрувати (себто думати), але, мені здається, треба зменшити кванти часу. Ось порозгрібаю вихідні коди інших ОС, гляну, що там. А зараз спати, бо ж завтра з математики олімпіада…

12.11.2005
17:30 - передивляюся коди інших ОС, написаних на Паскалі.
18:32 - зробив динамічні кванти (в залежності від кількості процесів). Так набагато краще. На цьому поки і зупинимося. На черзі тестування і випуск 0.15 final.

13.11.2005
18:34 - о, возрадуйся, великий Торвальдсе! Возрадуйся і плач водночас!!! Чого радуватися - StreamOS тепер має динамічну таблицю процесів і, відповідно, процедур. Зараз максимальна кількість процесів 256. І МЕНІ ТЕПЕР ВСЕ ПОФІГУ!!! А чого плакати? Та того, що більше часу треба для тестування StreamOS. Зараз викладаю 0.15rc2 і вперьод…
18:36 - …тьху… найголовніше-то не сказав… Як зробив. Ось як: той же самий масив, але тільки динамічних вказівників. Такі вказівники жеруть мало пам'яті. Як треба створити процес: беремо вказівник відповідного номеру і даємо команду new(process[n]). ВСЕ. Працюємо…

14.11.2005
20:36 - знайшов код і склепав юніт для визначення проца. Також зробив таблиці сінусів і косінусів (calculating.pp) від 0 до 360 градусів. Але цих можливостей у 0.15 не буде. За "неблагостабільністю"… Як відтестую, так і вкину. Десь до 0.17.

15.11.2005
17:55 - рихтую код, ловлю баги, розкидаю код по юнітах - створив shedule.pp, processes.pp. Ніяк не визначусь з шедулером - викинув динамічні кванти (вкотре!). Треба радитися на форумі…
18:23 - …гм, я не думав, що з переходом на динамічну таблицю процесів буде так багато багів… На щастя, вони легко виявляються і так же легко фіксяться… (тьху-тьху-тьху, стук-стук-стук… по голові… бо вона дубова… а дуб - дерево :-).
20:57 - наче, трохи навів порядок. Та й глюкава ж rc2! Ой, відчуваю, що rc3 - не остання буде з 0.15-их…

16.11.2005
19:25 - прийшла в голову цікава ідея - відмовитися від FreeDOS, а StreamOS перенести на Лінукс… Відкриваються безмежні можливості - нативна 32-бітність, купа драйверів, сучасна ФС, висока швидкість, нова версія FPC… Ось знайду підходящий міні-дистр…

18.11.2005
17:30 - розкидав по юнітах код, подивився на залежності на непотрібні змінні і збираю назад. Усе головне - в kernel.pp.
17:43 - позбувся processes.pp, shedule.pp. У kernel.pp навів порядок, відсортувавши за призначенням функції і їх декларації.
17:49 - те ж у syscalls.pp.
17:55 - функція verify тепер має повне право на законні 45 мілісекунд :-).
18:01 - 0.15 матиме свою назву - "Crystal Tear".
18:11 - навів порядок у fs.pp, виніс усі "небазові" функції до shell.pp - перегляд файлів, директорій, копіювання файлів…
18:17 - оптимізував memory.pp.
18:22 - привів до порядку tools.pp.
18:24 - і users.pp.
18:37 - бачу, ті 45 мілісекунд ніфіга не дали, окрім гальмів додатків. Отже, прибираю…
18:39 - думаю, rc3 готова, але поспішати не буду…

20.11.2005
20:43 - прийшла у голову нова ідея зробити масиви змінних динамічними. Але не у 0.15. Також почав писати детальну доку до кожного юніта. Теж не до 0.15.
21:14 - написав основне для kernel.pp і syscalls.pp.

22.11.2005
18:59 - написав доку ще на кілька юнітів.

23.11.2005
18:44 - роблю новий юніт displays.pp. Щоб швидше робив. І принцип інший.
18:52 - тільки не дуже виходить. Є стимул для роботи…
19:10 - так, щоб робота не перетворилася на хаотичне написання коду, план дій такий: 1) випустити 0.15 у такому стані, якою вона є; 2) почати перехід з FreeDOS на Linux; 3) оптимізовувати і переробляти все саме під Лінукс.

25.11.2005
15:17 - фінальні акорди підготовки до випуску 0.15. Остаточна назва релізу - "Nightwolf". Перекладати, думаю, не треба :-). Дописую доку, змінюю сайт.
15:37 - дописав доку.
15:50 - доробив усе інше, залишився сайт.
15:56 - закінчив сайт. Викладаю на сервер.

26.11.2005
16:56 - вже виклав 0.15. Добре, що встиг, а то зараз зв'язку немає. Наступний реліз - 0.16. Працюємо далі…
17:37 - переробляю роботу зі змінними. Як вам таке: push_boolean(active, strtoint(c), not (process[round(pop_float(active, strtoint(a)))]=nil)). Слабо прочитати :-)?
17:55 - залишилося дописати небагато… Чи працюватиме?..

27.11.2005
19:51 - …працюватиме, де ж воно дінеться! Щоправда, кілька багів вилізло, але то треба було уважніше код писати… Мо', ще будуть, але всі тестові додатки працюють коректно. Начебто… Продовжую…

30.11.2005
19:55 - перемістив перетворення рядків для echo/xy/tovar у tools.pp. Так зручніше та оптимізованіше. Наче, працює.
20:15 - зробив динамічні змінні для процесів. Наче, працює. От саме для чого я переробляв роботу із змінними…

1.12.2005
21:47 - дещо переробив структури displays.pp.

3.12.2005
14:14 - тепер додатки можуть читати файли. І писати. Але це ще не "оформлено", та й баги є…
18:08 - скомпілив Стрім у Лінуксі 2-ю версією FPC, але у роботі такі глюки, як наче увесь цей час багів ніхто не ловив… Страх… Треба щось думати. Можливо, знову перейти на статичні таблиці процесів.
21:30 - до чорта кляту динаміку! Відкотився до 0.15, залишивши роботу із змінними через процедури, та tools.pp. Змінні процесів залишив статичними. Скомпілю в Лінуксі, тоді глянемо…

4.12.2005
13:15 - переробив структуру екрану - тепер таблиці статичні, що збільшило швидкість роботи. Правда, не набагато.

7.12.2005
20:24 - шукаю пристойні лів-флоппі Лінукса (дещо знайшов) та граюся з динамічною пам'яттю. Чогось в Лінуксі таблиці процесів не знищуються. Дивно… Оце поміняв - треба перевірити.

8.12.2005
21:59 - є "ліві" думки… Щойно скомпілив Стрім под Вінду (типу віртуальної машини) - працює, клятий! Зараз спробую FPC 2-м скомпілити.
22:11 - от тобі й на! У Вінді 2-й FPC теж глюкає, точніше, глюкають проги. А у 1.0.10 все ок. Казали ж люди, що 2-й глюкавий, але щоб настільки…
22:52 - під Віндою Стрм працює непогано, з'явилися, правда, баги деякі (пов'язані з динамічними змінними), але, думаю, то виправиться.

9.12.2005
15:43 - є один, але жахливий баг - система падає, коли процес сам завершує свою роботу. З'явилося це після введення динамічних змінних, і, думаю, пов'язане з виконанням процесів.
18:31 - ШОБ Я ТРИЧІ СДОХ І В ГРОБУ ПЕРЕВЕРНУВСЯ! І це ж не перший раз! Розказати? Ну, не смійтеся… Коротше, ось що: було собі таке until _шось_ після виконання кожного модуля проги. І от оцей самий грьобаний _шось_ містив or … or … . Що б ви собі думали? Оказується, спочатку треба перевіряти process[active]=nil, а ТІЛЬКИ ПОТІМ все те, що стосується самої таблиці: в даному разі кванти часу і прочая фігня. Тю……………………
18:33 - отож, плани такі: перенесення динаміки з StreamVM (це те, що у мене учора вийшло під вінду написати) у StreamOS. А там побачимо. Зате код як я навернув…. Ммммм…. Пальчики оближеш і відкусиш! Перевірки УСІХ ситуацій на кожному кроці виконання! Суворий контроль! Ніяких наркотиків!… Ой, не туди понесло…
18:46 - переніс, усе працює. ТАК, ось плани: 1) розділення розробки на суто ОС та саме віртуальну машину - усі дії (небезпечні) будуть проганятися на віртуальній машині, а вже потім будуть переноситися на саму ОС; 2) робота з файлами з віртуальної машини - треба б зробити аналоги прог ls, cp, cat. Хоч би це. Будемо працювати.

11.12.2005
19:29 - зрозумів, як створювати конфіги компіляції, успішно випробував і тепер переноситиму до StreamOS.
19:55 - файл config.inc - параметри компіляції ядра. Все працює. Зараз зробив можливість повністю відключати log.pp. Ще, мабуть, зроблю можливість однокористувацького режиму. Буде цікаво :-))).
20:05 - о, так! Воно працює! Тепер можна відключати логування ядра і багатоюзерський режим!
20:07 - видалив доку, бо вона вже абсолютно не відповідає реальності.
20:12 - підправив специфікацію.
20:17 - 0.16 буде під UPL 2.2. Основні зміни стосовно підтримки користувачів та частин програм. Ну і так, "по мєлочі"…

12.12.2005
17:34 - прибрав авторун, замінив ініціальним скриптом (типу авторуну, але юзеро-незалежне). Для чого? Прийшла ідея відключити шелл, а замість шелла запускати якусь прогу.
17:39 - працює.
18:28 - погрався з displays.pp - ініт не працює… Що таке???
18:36 - завтра ж піду до психолога! З таким програмуванням можна дуба дати!!! Скажіть мені на милість, ЧОМУ ТІЛЬКИ ЩО ROOT DIRECTORY БУЛА "StreamOS v0.2 Vorskla Preview (0.16)"??? ЯК МОГЛА ВЕРСІЯ ПЕРЕНЕСТИСЯ ДО STARTING_DIR?????
18:40 - І ЧОГО ВОНО ЗАРАЗ ПРА-ЦЮ-ЄЄЄ???
18:55 - фух, все працює. Зробив таки ініт-скрипт і динамічні екрани (створюються тепер лише для процесу, а не просто займають впусту пам'ять). Динамічні екрани зробив для економії пам'яті, щоб потім можна було ще атрибути символів всунути. А ще треба буде робити вивід текст не порядково, а посимвольно. Роботки прибавилося… Працюємо…
21:33 - доробив displays.pp так, щоб була можливість вводити і виводити символи не порядково, а посимвольно. Треба ще кілька моментів прояснити, але цілком виглядає усе дуже гарно…

13.12.2005
18:29 - трохи доробив displays.pp - набагато краще, але є ще деякі проколи… Буду справляти…
19:57 - ще трохи підрихтував старий displays.pp і взявся за новий, абсолютно новий. Глючить страшенно, але ще подивлюся, як воно реалізоване в інших ОС та таки ж зроблю…

15.12.2005
18:25 - частково зробив новий модуль displays.pp, але, виявляється, він ще тормознутіший :-(. Буду використовувати та доробляти старий.
18:45 - старий юніт майже доробив, працює відмінно, за вийнятком деяких неточностей (ще трохи підправити). Зараз спробую відключити шелл.
19:08 - відключив. Дуже класно вийшло. Тепер можна починати писати шелл на функціях SOUL…
19:15 - приготую до викладення 0.16beta1.

16.12.2005
16:30 - виклав 0.16b1. Також з новою Ліцензією 2.2. Зараз попрацюю над calculating.pp…
16:48 - маємо результати тестування calculating.pp. На цілочисленних значеннях сінусів від 0 до 360 градусів кожен по 1000 разів:
res:=sin(n), час=331 мс на AMD K6-2-200
res:=stream_sinus[n], час=50 мс на цьому ж проці.
Швидкодія більша у 6 з чимось разів!!! Nobody був правий…
17:01 - так, трохи більше, ніж у 6 разів швидше. Доперевіряв довгим бенчмаркінгом.
17:26 - приєднав calculating.pp до ядра. Все працює. Створив відповідний тестовий додаток.
18:15 - зробив класний make.bat. Тепер можна вказувати ось що:
make help - список усіх можливостей побудови
make config - компіляція конфігураційної утиліти (також щойно написав), яка будує config.inc, та її запуск
make kernel - компіляція ядра
make zkernel - компіляція і стиснення UPX'ом ядра
Ото так. Тепер для компіляції треба вводити:
make config
make zkernel
Або лише останню, якщо конфіг є.

17.12.2005
19:55 - знайшов модуль для обрахунку математичних виразів у рядку. Працює у 110 разів повільніше, але набагато гнучкіше. Враховуючи реальну швидкість математики у SOUL, можна спробувати підключити цей модуль до StreamOS…

18.12.2005
16:07 - знаменний день - написано перший користувацький додаток до StreamOS - консольний калькулятор. Можна тепер зробити так: run apps\tcalc\tcalc 2+2. Запуститься прога, подумає, скільки буде 2+2, видасть відповідь і буде чекати натиснення будь-якої клавіші. Це стало можливим завдяки підключенню модуля-парсера математичних виразів у рядку. А можна задати дещо складніше, типу pi*cos(20)+7*3. Такий варіант теж пройде.

23.12.2005
15:50 - трохи підчистив новостворений calc.pp.

24.12.2005
13:16 - здається, повністю "обезбажив" displays.pp. Єдине, що може кинутися в очі - це порожній рядок унизу, коли вводиш текст з клави. Але мені навіть подобається - естетично :-). Якщо серйозно, то тут вже можливості впираються в саму функцію readln/read. Отож, поки все ОК, далі буду робити, мабуть, файловий ввід/вивід через додатки.

25.12.2005 - олімпіади. День перший.
17:52 - була географія. Приїхав виснажений. Друкувати ще можу :-). Лізуть в голову всякі думки про Стрім.
18:05 - зробив простенький захист від "злочинних" дій процесів - якщо наявна якась неправильна інструкція - вбиваємо і забуваємо :-).
18:18 - підрихтував шелл - тепер для запуску проги можна просто набрати ім'я виконуваного файлу, без слова "run". І коли жмеш Enter - шелл тепер не матюкається :-).

27.12.2005
13:32 - вчора був день другий, але змоги написати не було. Сьогодні вдома, але якби поїхав, то нікому було б Стрім писати :-)…
13:43 - змінні не знищувалися, коли знищувався процес… Виправив.
14:23 - оптимізував syscalls.pp та ввів новий тип byte. Бачу, робота з типами стає неефективною (надто великий код), отже, треба щось нове думати…
21:42 - тепер ядро тільки логує потрібні повідомлення, а вже шелл виводить їх на екран.

29.12.2005
11:47 - план роботи: введення типів integer, file of byte.

30.12.2005
19:23 - тепер процеси не закріплені за дисплеєм зі своїм PID. Тобто будь-який процес може сам вибирати, на якому дисплеї працювати. Наприклад, програма _date_ (перша системна прога) на нульовий екран (системний) виводить поточну дату.
19:29 - наче, все працює. Відтестував. А час покаже :-)… Виправив специфікацію та поновив новини.

31.12.2005
13:14 - З НОВИМ РОКОМ!
13:46 - доробив трохи дисплеї. Тепер кожен дисплей має свою кількість власників, і якщо вона рівна нулю, то дисплей знищується.
13:59 - трохи підчистив код.
14:31 - якийсь глюк з'явився. Думаю, саме глюк, бо він то є, то нема. Можливо, це boshs…

1.01.2006
13:43 - здрасті :-)!
14:25 - доробив if так, щоб тепер можна було ще вказувати процедуру, як після else.
14:55 - другий користувацький додаток - bash. Так, ви не помилились - це командна оболонка. Щоправда вона вміє лише запускати інші додатки: з клави вводиться додаток і його параметри, натискається Enter - і… вуаля! Бажаний додаток запущено. Принципіальних змін робити не довелося, лише додав виклик exec до SOUL, та трохи змінив tovar. Всі зміни відображені у специфікації.

2.01.2006
13:41 - та ні, то таки баг. Перевірив на реальній машині. Що ж, буду шукати… Він полягає у тому, що ввід з клави для додатків іноді вбиває ядро…
13:52 - наче, ні. Помилка у запуску нового додатку на виконання… Системний виклик exec.
14:05 - …містика якась - ввів лог - стало працювати довше, але все-одно помилку через деякий час видає…

3.01.2006
15:40 - перемістив весь код до streamemu (StreamOS, який запускається на Windows). Помилка також є, отже, буду працювати. Чого так зробив? Так швидше… І код не буде "побитий" як що…
15:54 - помилка в clean_table.
16:55 - зважаючи на величезну купу багів, довелося відкотитися до 29-го числа.
16:57 - буду робити заново. Як? ПО-ТИ-ХЕ-СЕНЬ-КУ!!!
21:48 - Король мёртв… Да здравствует король! Що се значити має? Стрім загнувся? Не зовсім. Оскільки, бачу, підтримки мені від інших людей не дочекатися (а самому розбиратися і підтримувати 200-кілобайтний код ой як напряжно), то відсікаємо багатозадачність/багатокористувацькість/багатовіконність і отримуємо… ЧУДОВУ КРОСС-ПЛАТФОРМЕННУ ВІРТУАЛЬНУ МАШИНУ! Що я вже й зробив… Треба б форуму сказати…

3.01.2006
22:04 - переписав StreamOS на StreamVM. Не турбуйтесь, основне залишилося - syscalls.pp :-).

4.01.2006
13:45 - переробив сайт. Форуму сказав. Реакція відома… Підготував розгорнуті пояснення. Ось викладу…
14:37 - ввів додатковий захист від помилок позиціонування.
15:42 - ввів захист від виключень. Тепер ядро не впаде у жодному разі.
19:48 - погрався із консольним вводом/виводом, доробив, довів до потрібної кондиції…
19:55 - трохи розширив інформативність логу - тепер при помилці там показуються позиції у коді.
20:01 - змінив специфікацію та новини.

6.01.2006 - зі святом!
14:35 - вчора трохи погрався з TThread. Штука класна, але ще треба розібратися. А так… Зараз мірятиму tbench'ем швидкодію Стріма, підбиратиму оптимальні значення кванту.
14:41 - як показують виміри, в однозадачному середовищі кванти ні до чого.
14:47 - але я їх залишу, бо вони виконують важливу роль у захисті системи від коду, який довго виконується і може "завісити" Стрім. Чи навіть основну систему. Радує те, що це роботу аж ніяк не гальмує.
15:14 - трохи підчистив код.
23:11 - довів старе ядро до кондитного стану. Можливо, продовжу його розробку. Буду радитися на форумі.

8.01.2006
14:02 - СтірмОС живий. Перейшовши на статичні змінні процесів (поки що), вдалося усе налагодити. Переніс усі здобутки зі СтрімВМ до СтрімОС, також ввів у дію менеджер помилок (чи диспетчер помилок, як хочете; звучить воно як errorman) для контроля за помилками, щоб ядро не падало. Вже є прогрес - узяв під контроль правильність написання системних викликів та позиціонування.
14:31 - в конфігурацію компіляції ядра вніс інфу про кожну опцію.

9.01.2006
14:53 - вніс зміни до вбудованого шеллу - виніс обробіток команд до окремої процедури, що тепер дає змогу робити щось типу пакетних файлів…
15:21 - тепер init.ssf може розглядатися як звичайний пакетний файл, який містить набір команд.
15:38 - працює запуск скриптів із шеллу, працюють навіть рекурсивні скрипти (один скрипт викликає інший…).
20:00 - випробував криптостійкість шифрування - воно майже нульове. Пароль довжиною 4 символи ламається паролем довжиною два символи! Зараз випробую новий алгоритм…

10.01.2006
14:33 - трохи переробив квантування.
21:12 - зробив заміну стандартному list'у шелла на функціях SOUL (apps\list\list).
22:13 - в окремі програми виніс mkdir і rmdir (apps\mk[rm]dir\mk[rm]dir).
22:15 - завтра те ж саме зроблю із видаленням файлів. А там ще щось може винесу в окремі програмки…

11.01.2006
13:27 - переніс видалення файлів до окремої програмки. Викладу rc3 на сайт, бо завтра їду на олімпіаду з інформатики… До речі, треба буде fs.pp на перехваті виключень зробити, але це як я приїду.
18:33 - додав ескейп-послідовність \n (два символи ігноруються, використовується для формування порожніх рядків).

14.01.2006
17:49 - приїхав. Зустрічався з Блейзом, обговорив СтрімФС. Коротка суть: ФС у файлі. А там подивимось.

15.01.2006
17:42 - передаю завантаження модулів прогам, трохи виходить, але ще треба думати…

17.01.2006
19:39 - нарешті доступний текст GPL3 (попередній текст, ще не закінчений). Прочитавши, відредагував UPL до версії 2.3.

18.01.2006
19:29 - гм… FPC 2.0.2 Go32V2 мені не сподобався. Мало того що компілить 40 секунд (а повинен 10!), так ще й проги погано працюють. Не те воно…
19:37 - відкотив зміни з модулями, бо трохи глючило. І зараз глючить, але вже менше :-).

20.01.2006
16:47 - ага, пофіксив отой баг, але то був баг власне додатка. Просто в Лісті не було вказано функції else. А вона обов'язкова!
17:04 - зробив можливість показу ескейп-послідовностей.
17:15 - перемістив скрипт ініту до каталогу скриптів. Треба щось надумати типу конфігурації та її збереження (streamos.cfg).
18:06 - тестування показують, що ділення shr швидше від ділення div на 25%.
18:08 - а множення shl від множення * - на 16%.
18:29 - після належного оформлення цілочислене ділення швидше на 30%! Треба вносити до Стріму…
19:38 - в прольоті! Після врахування від'ємних чисел та ще "по мєлочі", то співвідношення часу 1:1. Ніякої оптимізації…
19:41 - знайшов баг з математикою (радіани і градуси переплутувалися).
20:06 - на 20 з чимось хвилин запустив тестові додатки - 76000 (приблизно) викликів. Все працювало належним чином. Зараз перегляну Ліцензію, щоб остаточно завершити UPL 2.3.
20:42 - маємо UPL 2.3.
21:13 - поновив ядро низького рівня + деякі його драйвери. З виду, все працює стабільно.

21.01.2006
19:59 - nobody повідомив, що скоро буде перероблена графіка. Чекаю з нетерпінням!

22.01.2006
10:59 - познаходив такі баги, що дивуюся, як воно працювало…
11:16 - почав реалізацію нового шеллу. Поки все працює стабільно і не падає. Головне - не спішити, а то нічого не вийде…
11:20 - трохи підправив початок цього файлу. Щоб красивіше :-).
14:49 - розкидав код по директоріям, переробив make.bat.

23.01.2006
13:13 - виправив баг з парсингом. А ще тепер після назви процедури не потрібно вказувати її розмір.
13:26 - відтепер коментарі ніяк не впливають на швидкість роботи проги. Вони просто ігноруються ще на стадії завантаження проги у пам'ять.
14:06 - ввів ще одну подію - OnMessage. Вискочила трабла - останнє повідомлення оброблюється не до кінця. Я причину знаю (при отриманні останнього повідомлення ставимо їх кількість в 0, а ядро тому радується і перериває подію, не дочекавшись її завершення). Треба, мабуть, передати обробіток повідомлень до syscalls.pp.
17:06 - зробив. Тепер при надсилання повідомлення ставиться ознака необхідності виконання OnMessage. Після виконання (коли досягаємо mabort) перевіряємо кількість мессаг. Якщо вона рівна нулю, то ознаку необхідності прибираємо. Ото і все.
17:15 - зараз відповідно підправлю специфікацію. І ще мені прийшла чудова думка - не робити ще одну подію OnShutdown, а організувати це діло так: шлеться від імені ядра повідомлення процесу, той його ловить, дивиться: "ага, мені прислали shutdown", виконує необхідні операції і дає abort. Все.
20:27 - переробив трохи exec. І подумав, що було б непогано ввести integer, від якого колись відмовився.
20:28 - забув сказати, що дописав apps\shell\shell. Функціонально - мінімум. Ще треба всякими написами навернути :-).
20:36 - зробив показ повідомлень про помилку запуску процесу та про успішність запуску. Як бачте, навертаю…
20:40 - навернув :-).
21:06 - написав доку до kernel.pp. Пишу до init.pp.
21:18 - зробив ще на syscalls.pp. Решту дороблю згодом.

24.01.2006
12:54 - так прикинув, що повідомлення слугуватимуть лише для обміну інфою. Керування процесами буде здійснюватися через події.
18:44 - трошки підчистив код. Продовжу катати доку далі.
19:07 - залишилося ще кілька юнітів. Потім, написавши основне, розпишу кожну функцію детально.

25.01.2006
16:54 - протестував Стрім на реальному компі (АМД К6-2-200). Ось які результати: tbench - 670 балів, tpi - 26 сек, tfor - 8.5 сек. За допомогою apps\calc\calc зробив розрахунки, і вийшло, що на Celeron 1.3 на цьому ж ядрі повинно бути таке (+-5%): tbench - 4335 балів, tpi - 4 сек, tfor - 1.3 сек. Хоча тест робився саме на проц, не виключено, що результати будуть абсолютно інші (кращі). Бо ж ще пам'ять грає важливу роль, а проги Стріму ой як її люблять використовувати… Тобто, якщо врахувати ще й пам'ять, то, можливо, вийде така картина (+-15%): tbench - 5000 балів, tpi - 2.5 сек, tfor - 0.8 сек. Тепер пакуюся, надсилаю все через сітку на той комп і готуюся до апгрейду…

26.01.2006
12:50 - пишу з Целерона 1.3. Щойно протестував систему на ньому і був трохи здивований, побачивши НАСКІЛЬКИ результати відрізняються від прогнозованих. Ось вони: tbench - 7320 балів (узяте середнє значення з чотирьох запусків, пікове - 7416, найнижче - 7265), tpi - 2 сек, tfor - 0.4 сек (взагалі-то це значення не точне, бо досить мале, але воно точно менше за 0.5 сек :-).
16:14 - відшліфував нову технологію шифрування (xor кодованим паролем).
19:16 - доробив шифрування, але ще робитиму далі, бо є ідеї…

29.01.2006
18:47 - "только да!!!!!" (С) Чёрный кофе. Майже завершив налаштування системи, скоро знову візьмуся до роботи.

2.02.2006
21:45 - обдумував концепцію "ФС у файлі", а, взагалі-то, зайнятий зараз вивченням C++ і написанням сервера та клієнта повідомлень (для спілкування в локалці).

18.02.2006
15:34 - доки все утряслось з операційною системою (я тепер 100% в Лінуксі), я, в принципі, втартив середовище розробки і тепер маю юзати fpc 2.0.0 у Лінуксі. Тільки що переробив код так, щоб він працював у Лінуксі, але трохи воно не те. Хочу знайти нормальний емулятор для Лінукса, щоб поставити туди Вінду і юзати нормальний fpc. Bochs Вінду не запускає, хоча 95/98 я ще не пробував…

19.02.2006
18:37 - може, скоро буде нормальний емуль. А поки що доводжу Стрім для Лінукса до ума…

21.02.2006
19:59 - написав новий модуль шифрування, за раніше відшліфованою технологією. З паролю тепер генерується ss5-sum, типу md5, по незворотньому алгоритму. 12-байтна система шифрування (96-ти бітна). Поки що вистачить. Працює добре.

22.02.2006
16:53 - прийшла в голову страшнюча ідея - зробити мікроядро, яке б використовувало динамічні бібліотеки. Щойно випробував цей механізм. Дуже задоволений!
17:11 - щойно запустив малесеньке ядерце з додатком. Працює!!!

23.02.2006 - зі святом!
20:49 - успішна розробка продовжується. Зробив мультизадачність для новенького мікроядра, тестую на додатках. Працює!
21:01 - треба буде викласти на сайт як тестову версію… О! Спробувати зараз зайнятися сайтом…

24.02.2006
15:17 - сайт зробив, але поки не виклав. Обдумав концепцію зв'язку програм з ядром, переробив трохи код, розкидавши по юнітах.
16:17 - ги… рівно година… Зробив механізм системних викликів, написав прогу, яка читає з клави текст і виводить його, а коли жмеш ескейп - виходить з програми.
18:33 - в основному, зробив багатовіконність.
21:11 - приблизно довів до ума взаємодію ядра з додатками, мабуть, треба ввести ще команди для додатків…
21:25 - зробив.
23:01 - зробив логування (прості повідомлення) на 10-й віртуальний дисплей. Переключення дисплеїв по CTRL+q. Працює. До речі, поновив сайт. Все, треба спати…

25.02.2006
16:17 - поставив Вінду. Ні, не думайте, що я зніс Лінукс - я поставив емуль, а на нього - Вінду. Це щоб можна було Стрім робити. Виходить. Вже переніс криптування. Треба випускати нову версію.
19:12 - переробив консольний вивід для додатків - тепер вони можуть самі визначати, який дисплей для виводу використовувати.

26.02.2006
18:48 - був на обласному захисті МАН з інформатики (ні, я не писав, я слухав - з мене вистачило 2-го місця по олімпіаді). Ну нічого нема! Абсолютно! Чисто по програмуванню - 0, все інше про сайти та про навчання. Була, правда, робота по Лінуксу, але то лише про те, що його можна застосувати у навчанні… От якби хтось узяв усі ядра (Linux, Windows, Mach, Darwin, Hurd, StreamOS… :-)), порівняв їх, створив ЛівСД з ними… Ех…
21:17 - спробував WDOSX - глючить з ДЛЛ-ками. Також почав писати логін-програму. Каркас написав, залишилося виклик аутентифікації додати.
22:08 - трохи переробив взаємодію з apmlib.pp.

1.03.2006 - весна!!! А сніг мете…
20:22 - почав реалізовувати кращу роботу зі змінними. Тепер у основних математичних операціях можна вказувати не змінні, а просто значення. А змінні вказуються із знаком $ спереду. Ось дивіться: "+ 25 6 $1 float" помістить у 1-шу змінну float 31 (бо 25+6=31). Отак от. Здається, так набагато зручніше.

2.03.2006
18:26 - перевів на розширений синтаксис вже і цикл for. Працює.
18:44 - те ж саме зробив з if. Працює.
18:55 - …і функцію now. Відповідно, переробив tfor. Працює.
19:03 - …getparam і calc. Працює.
19:06 - …додав парсинг до decide_string та переробив date. Працює.
19:13 - …del. Працює.
19:27 - …функції, які стосуються стану процесу. І list. Працює.
19:28 - на сьогодні вистачить.
22:35 - переробив mkdir/rmdir, але щось десь глюкнуло - і в образі трьохдюймовочки з'явився каталог aaa з невидаленими файлами загальним розміром близько 2-х гігабайт :-). Нормально?
22:56 - почалися глюки… Йду спати. А якщо серйозно - не запускаються проги. Дивно…

3.03.2006
15:02 - тупо… Ні одна прога з-під вбудованого шеллу не запускається. Окрім apps\shell\shell. А з-під зовнішнього шеллу - запускається :-). Найсмішніше те, що я нічого не чіпав… Буду думати…

6.03.2006
18:46 - ловись рибка велика й маленька! Баг, виявляється, був у memory.pp. Вистачає закоментувати усю погань процедури clean_container - і баг зник. (Всё исчезло, не оставив и следа. И не знает боли в груди осколок льда… - © як відомо, АРИЯ). Пра-цю-ємо!

7.03.2006
17:42 - начебто, працює. Про всяк випадок, зберіг стару копію. А в поточній викинув memory.pp. Продовжу чаклувати над SOUL.
17:45 - …tbench працює і видає 107 балів.
17:48 - …ted працює.
18:01 - …test працює, переробив repeat.
18:03 - …tidl працює.
18:08 - …tinfor працює.
18:12 - …tkey працює. Піду прогуляюся.
18:50 - …tmsg працює.
18:58 - …tpi працює, тільки треба впорядкувати трохи…
19:01 - …впорядкував.
19:08 - …trep працює. Власне, це все, окрім login, який ще треба зробити. Але спочатку перегляну syscalls.pp…
19:17 - …повиправляв недобачені функції. Начебто працює.
19:25 - на сьогодні все, але треба повідомити форуму про результати роботи.

9.03.2006
19:03 - експериментував з квантами часу - при кванті 500 мсек на один потік tbench видає 110 балів, а при 5 мсек - 103. Враховуючи керованість системи, я зупинився на варіанті 5 мсек.
19:19 - провів тестування на реальному компі: tfor - 0.769…0.771 с; tpi - 2.359; tbench - 7024…7089. Результати, в принципі, непогані. Але менші, ніж були через розширення синтаксису SOUL та через зменшення кванту часу (для керованості). Тепер для кожного релізу старатимуся будувати графік, щоб бачити тенденції…
19:39 - Лінукс дає 145000 балів… Ото тобі й віртуальна машина…

10.03.2006
16:16 - трохи оптимізував. Приріст швидкості - 2%. Прибрав перевірку на nil з read_string, залишив перевірку виключення. Наче працює…
16:34 - зменшив квант часу до 1 мсек - краще стало працювати. Хай поки так і буде.
17:01 - квант часу - 10 мсек, але система тепер завантажується швидше - еталон секунди обчислений і винесений в константу.
17:41 - готую до викладу на сайт.

12.03.2006
10:23 - розігнав Стрім у 2.5 рази. Відмовився від квантування по часу, повернувся до квантування по системним викликам.
10:46 - потрясні результати! На реальному компі 15100 балів від tbench! Це вже майже 11% від Лінукса! tfor - 0.321, tpi - 0.93. Непогано. В тому ж дусі і далі…
12:11 - зробив динамічні приорітети. Вони вираховуються на основі швидкості компа та кількості процесів. Це забезпечило плавність роботи при купі запущених процесів та швидкість при одному процесі.

16.03.2006
21:37 - відрегулював значення еталону 1 секунди (вирахував перетвореннями: тепер це значення точне), а також підняв базовий приорітет з 10 до 15 системних викликів, відповідно підвищив ділене швидкості. Отримав певний приріст швидкості.
21:51 - маємо деякий спад швидкості (до 12800 балів від tbench). Дивно, бо на емуляторі спаду немає, а навпаки - є приріст. Ну нічого, і так нормально - tfor 0.39, tpi 1.149. Треба ще буде оптимізувати.

17.03.2006
19:24 - похімічив трохи із зовнішнім шеллом та з викликом процедур. Тепер викликати можна за іменем із змінної. Також додав виклики getcurrentdir і getlogin.

18.03.2006
21:23 - 0.16 фінальну на випуск.

19.03.2006
16:45 - почав писати 0.17beta1. Втулив цікаву штуку - при натисненні F1 з'являється додатковий екран, де у формі таблиці кожну секунду оновлюючись пишеться використання процесами загального часу роботи. Звичайно, ця штука виключається конфігом.
17:14 - підправив tbench - тепер видає кращий результат :-). Просто тепер кінцевий час вираховується один раз - перед стартом циклу, а не кожного разу під час циклу. На bochs'і дало приріст 30% (з 230 до 300). Треба буде перевірити на реальному компі.

27.03.2006
17:57 - прибрав debug screen - він гальмує і глючить.
18:27 - прибрав з образу command.com і keyrus.com. За непотрібність.

30.03.2006
13:31 - оптимізував. На емуляторі дає 14% приросту швидкості, а на реальному компі - 33% спад швидкості! Кому вірити?..

31.03.2006
14:20 - нічого не знаю. Оптимізацію залишив, на віртуальній машині приріст швидкості зберігається.
18:54 - прибрав ліки пам'яті - після закінчення роботи процеса тепер вивантажуємо всі його модулі. Перевірив по memavail.

4.04.2006
18:23 - додав захист усіх системних викликів, що зменшило швидкість на 8%, зате тепер система не падає, коли проги з багами.

14.04.2006
17:49 - щось я розлінився. Взагалі-то чекаю на графіку, але от зараз знову почав робити динамічні змінні. Тестую. float вже зробив, начебто працює.
17:56 - string теж. Треба придумати якийсь гарний тест…
17:58 - …10 процесів, які в процесі роботи падають. Наче, система працює після цього. Отже, все має бути файно…
18:05 - переробив усе і протестував. Ліків пам'яті, здається, нема. То добре. А швидкість трохи впала. Але не дуже.

17.04.2006
18:06 - пробував переробити таблицю процесів на динамічну, деякі баги пофіксив, але система все-одно падала. Довелося відкотитися.

28.05.2006
21:43 - розлінився страшенно! Чекаю на графіку від nobody, хочу її прилаштувати до ядра. В принципі, це основне. Ще треба б почаклувати з тією динамічною таблицею процесів. І з модульністю програм. Зараз передивлюся код…

29.05.2006
17:01 - що значить "прийшло натхнення"… Зробив динамічні таблиці процедур. Трохи іноді проглючує, але дуже рідко і набагато менше, ніж той раз. Пра-цю-є-мо!

31.05.2006
12:29 - 10-й клас навчання успішно завершено! А також: трохи зменшив глючність динамічних таблиць. Менше падають додатки. Хоча, все ще падають…

12.06.2006
17:32 - значить, не сказав головного. За ці дні неактивності я, нарешті, знайшов спосіб зробити ядро на dll. Є вже версія 0.17 research (вона на сайті), але активно робиться beta2 (на dll). От зараз, наприклад, реалізував подію onkey. Старе ядро поки не розроблятиметься.
16:16 - результат першого тестування ядра: 130594 бали! Це навіть більше, ніж я планував. Це становить 816% від 0.17 beta1. Ото так… А! Ще. UPL 2.5 буде якраз із поточної версії.

13.06.2006
14:24 - зробив так, щоб можна було встанавлювати стани виконання процесів: tas_running - виконується все, tas_waiting - виконується все, окрім головної процедури. Також почистив код і додав два нових системних виклика: tsc_setwaiting і tsc_setrunning. Без коментарів, думаю.
14:41 - пишу специфікацію. Треба зробити буфер натиснених клавіш для кожного процесу та можливість переривання подій.
15:06 - працює буфер. Переривання ще не робив.
15:14 - зробив можливість переривання OnKey. Воно навіть працює. Тепер OnKey має ділитися мінімум на дві частини: всі перші - це оброблення клавіші, а остання каже про те, що можна обробляти наступну клавішу з буфера.

15.06.2006
12:20 - за порадою nobody зробив функцію text_out_parse, яка дозволяє за один системний виклик виводити на екран кілька рядків.
12:24 - знайшов баг у bench.dll. Не експортувалася OnKey, через що не вивантажувалась сама бібліотека з пам'яті.
12:25 - плюс до всього доробив make.bat (щоб для вінди генерив екзешник) і створив тестовий додаток для text_out_parse - test.dll.
13:16 - я довго намагався заставити функцію OnMessage працювати, доки побачив, що такої функції не існує :-). Я просто забув відповідну функцію завантажувати. А так - повідомлення працюють чудово!
13:22 - також вніс etalon_of_second із старого ядра до types.pp, щоб bench міг його використовувати.
13:28 - підрихтував специфікацію.
13:52 - зробив доволі непогані bat-скрипти встановлення додатків та трохи підправив make.bat для ядра.
14:05 - повністю автоматизував скриптами компіляцію і встановлення ядра і додатків. Красота…

16.06.2006
13:35 - зробив пошук процесів за ім'ям, ввів власне ім'я процесу, яке передається через init. Також зробив нову подію OnSystemCommand, яка виконується тоді, коли ядро щось командує процесу. Можна було б зробити через повідомлення, але я подумав, що повідомлення будуть лише для міжпроцессного сполучення, а від ядра до процеса (від процеса до ядра також не через повідомлення!) все буде передаватися миттєво. Відходжу від стандартного інтерфейсу повідомлень на користь швидкодії. Переробив відповідно до цього тестові додатки повідомлень. Зараз підправлю специфікацію, а далі буду робити всякі перевірки і диспетчер помилок.
17:53 - "Возьми моё сердце, возьми мою душу"… Зараз Арія грає… Я довбак. А ви не здогадувалися :-)? Годину шукати баг по всьому ядру і знайти його у додатку :-). Я просто переробив отой механізм, що сьогодні зробив. Таки ж тепер команди передаються ядром до процесу повідомленнями. Тепер я спокійний за стандарти… Зараз тільки специфікацію перероблю, бо тепер ще й вказується тип повідомлення.

17.06.2006
16:56 - попрацював над старим ядром, переробивши його на віртуальну машину (типу Яви).
18:44 - прикрутив модуль динамічних дисплеїв, але чомусь падає при знищенні додатка на поточному екрані. Шукаю…

18.06.2006
18:19 - а баг-то був простий. Із розряду "я у мами ***". Треба було робити перевірку на присутність процесу перед тим, як його виконувати. Все тепер працює. І динамічні дисплеї теж!!!
18:30 - оце зараз autoload, create_process, destroy_process включив у try…except. Щоб надійніше.
18:32 - і, наче, оформив менеджера помилок. У errorman.pp.
19:02 - я не знаю, що зі мною останній час твориться, але роблю такі помилки, що починаю із себе поражатися… Змінив types.pp (додав tsc_textxy), а не перекомпілив усі додатки. І система падає. Чого б вона не падала, якщо додатки треба просто перекомпілити… Ужос…
19:10 - додав tsc_textxy.
19:26 - рік думав, що text_out_xy працює правильно, оказалося - ні :-), Прибрав str_imp за непотрібністю, подумаю ще над text_out_xy…

19.06.2006
17:31 - виклав поточний снапшот на сайт, а потім зробив захист від некоректної роботи процесів.
17:36 - трохи переробив скрипти компіляції та встановлення.
17:41 - зробив прогу date, яка при завантаженні виводить поточну дату та час на нульовий екран.
17:42 - ось що прийшло в голову: треба робити сервіс встановлення програм. Цей сервіс реєструється в ядрі, і йому можуть приходити повідомлення-запити на встановлення. Залишається лише зробити реєстрацію таких сервісів у ядрі.

23.06.2006
12:12 - доробив повідомлення так, щоб тепер в OnMessage передавався pid того, хто це повідомлення послав. Також зараз почну перекладати доку на інгліш.
12:50 - перевів останню новину, файл про розробників, специфікацію, readme та build. Також остаточно придумав схему сервісів і тепер знаю, що першим сервісом буде кодування.

10.07.2006
16:51 - поновив ядро низького рівня до 20060521.
17:20 - переробив систему повідомлень та системних викликів так, щоб використовувався масив string для більш зручного використання. Тепер не msg, data:string; а msg, data:tkt_data; type tkt_data=array[1..8] of string;
17:46 - додав системний виклик завантаження процесу і відповідний тип повідомлення для повернення результату процесу.

12.07.2006
13:20 - зробив передачу параметрів процесам при завантаженні.

13.07.2006
14:52 - вирішив попрацювати над StreamVM. Додав новий тип даних - listvar (tstringlist) і відповідні функції для роботи з ним.
15:26 - також ввів longint.
20:35 - значно переробив синтаксис SOUL. Замість "$<номер змінної>, а потім десь в кінці оператору тип змінної" зараз $<тип змінної><номер>. Також прибрав tovar і vartovar, замінивши оператором ->. Унарні оператори +, -, *, /, div, -> тепер вказуються не спочатку рядка, а після першої змінної. Дуже зручно: $l1 + $l2 -> $l3. Тут -> є пустим оператором, просто для сприйняття так краще. А можна і так: 1 -> $l5. Тут це вже не пустий оператор, а оператор присвоювання. Ото так :-).
21:11 - значить, от що. Я тут подумав: repeat забезпечує більшу функціональність, ніж for, а, оскільки я захотів переробляти for, то подумав, чи не легше буде його взагалі викинути? Так, мабуть, і зроблю…
21:37 - викинув for (без нього теж все працює через repeat), переробив if. Завтра ще передивлюся код та допереробляю всі додатки. Це буде вже StreamVM 0.99rc2.

15.07.2006
21:43 - з цього моменту розділяю історію StreamOS та StreamVM.

28.07.2006
17:05 - приїхав з Карпат, взявся за сервіси. Все працює. Залишається ще в деталях проконсультуватися з nobody і випустити 0.17. Треба ще зробити ідентифікацію повідомлень (думаю, по часу відправлення) і буфер сервісів, а не єдиничні сервіси.
17:33 - зробив ідентифікацію повідомлень, а також перший сервіс - прототип сервісу криптування, але наразі цей сервіс просто видає довжину надісланого йому повідомлення.
17:46 - дивно, але ядро падає, коли вантажиться цей сервіс у ДОСі. У вінді все ок. Шо за…
17:49 - не поняв… В bochs падає ядро, а у VMWare спрацьовує errorman і пише access violation…

29.07.2006
17:07 - Бурачека з весіллям привітав. Але я з'їхав з глузду. Аляляляляля, а я сошла с ума! Какая досада! Тільки змінив ім'я служби криптування - усе стало на місця. Я б сказав багато чого гарного, але це була проблема 8.3…
22:59 - порадившись з nobody, вирішив винести менеджер сервісів в окремий додаток.

30.07.2006
13:05 - Into The Unknown! Нарешті я виніс менеджер сервісів в окремий додаток! І воно працює!!!
13:09 - проявився баг, коли кілька додатків працюють на одному дисплеї.

31.07.2006
22:27 - прибрав типи повідомлень, тепер їх місце зайняли ідентифікатори повідомлень. Також змінив тип планування процесів - тепер із побудовою черги виконання. Бажаного результату це не дало, але, згідно теоретичних підрахунків та синтетичних тестів, у майбутньому дасть десь 30 відостків приросту швидкодії.
22:31 - переробив трохи bench так, щоб тест продовжувався 10 секунд.
22:38 - знайшов і виправив недопрацювання із станами процесів. Трохи підвищилася швидкодія ядра.
22:42 - блін! Наступаючи на ті самі граблі, що і в старому ядрі, виставив певну кількість разів виконання процесу без перемикання на інший процес. Швидкість трохи зросла. Найцікавіше те, що бінарник Стріма під віндою показує швидкість у кілька десятків разів вищу, ніж на реальному залізі. Тут або вмваря тупить, або ж вінда. Префетчери які, може…
22:47 - і з'явилася проблема виводити формулу кванту в залежності від кількості процесів :-).
23:00 - формулою займуся вже завтра.
23:01 - в принципі, закінчити новий шедулер - і можна фінальну випускати. План майже виконано. Можна, правда, ще сервіс доробити до повноцінного криптування… Чим я завтра і займуся :-).

2.08.2006
22:42 - стукнула в голову ідея винести консольний ввід/вивід в окремий сервіс. Щойно зробив новий сервіс kserv, якому ядро перекидає всі натиснені клавіші. Дороблятиму, починаючи з вівторка (8.08), бо їду на весілля.

8.08.2006
16:03 - виніс консольний вивід у окремий сервіс, а з ядра прибрав. Працює!!!

9.08.2006
12:29 - відкочуся назад, і прилаштую сервіси у ядро.
13:26 - відкотився з урахуванням усіх знайдених багів. Зараз працює просто відмінно. Реєструє сервіси, новий планувальник. Додав також рандомний планувальник: формує чергу, а потім наугад вибирає процес на виконання. Працює на диво стабільно. Закоментував його, потім зроблю включення через конфігурацію ядра.

10.08.2006
22:33 - перебудував структуру каталогів. У зв'язку з цим прибрав можливість запускати ядро з "лівого" каталогу. Тільки по структурі!

13.08.2006
14:14 - зробив конфігурацію ядра. В неї помістив вибір планувальника (queue, linear та random), а також debug.
14:19 - ввів todo-list. Нова версія ядра буде випускатися лише, коли завдання в цьому файлі відсутні.

14.08.2006
13:23 - зробив передачу параметрів при автозапуску, зробив керування живленням (вимкнення, перезавантаження, сплячка). Треба зробити так, щоб шелл міг запускати проги.
13:36 - зробив, але глюкає при неправильно введеній команді.
13:38 - а, ну, зрозуміло. Виключення накладуються. Зроблю перевірку всередині шелла.
13:43 - глюкає, але менше. На майбутнє: зробити перевірку на виключення лише на місцях, а не глобально.
15:49 - подумав і прибрав random scheduler.
16:19 - прибрав перевірку виключень з безпечного коду ядра. Також трохи доробив шелл.

16.08.2006
18:50 - готую rc1 до випуску.

17.08.2006
15:54 - вчора виклав rc1. Сьогодні трохи підправив ядро та шелл.
16:22 - зробив тестові додатки передачі/прийому повідомлень та швидкості передачі/прийому: а також щось типу bench, тільки тепер швидкість вимірюється неперервно. Зараз протестую на реальному залізі.

21.08.2006
12:36 - nobody пішов з команди. No comment. Я ж виправив дрібний баг з повідомленнями.
12:40 - і маленьку неточність під час старту…
12:49 - …не знаю, чому, але спірне вчорашнє (останнє) питання з nobody я вирішив-таки на його користь - 0.17rc2 матиме свій init. Не вдається мені втримати rc в рамках rc, alpha/beta якась виходить.
13:34 - якийсь баг із сервісом криптування…
13:38 - ні, то баг із додатком, який юзає цей сервіс. Тепер все ОК.
13:49 - оформив трохи доку.
14:01 - привів до належного стану вимкнення системи, з перевіркою необхідних модулів.

27.08.2006
14:45 - переніс розробку під Linux з використанням Wine.
16:41 - зробив повністю динамічний масив процесів без обмежень на кількість процесів.
17:01 - те саме зробив з віртуальними екранами.

28.08.2006
13:19 - підчищаю код…

30.08.2006
19:49 - зробив абсолютно динамічний буфер клавіш. На qemu глюки. На bochs - нема.
20:17 - спробував зробити динамічні data і msg - не працює. Буду розбиратися…

27.10.2006
18:49 - так-так. У мене не глюки, у вас не теж, сьогодні дійсно 27 жовтня. Чому така довга перерва? Пояснюю: я забив :-). Посварився з nobody, запоров стару гілку і закинув все ік чортовій матері. Але. nobody повернувся. Приніс свіжі ідеї, і от нова гілка ядра майже готова. Іт-а-а-к. 0.18 - початкова версія. Мультипоточна, на динамічних бібліотеках. Мікроядро. Зараз лишається зробити повідомлення та таки догратися з примусовим знищенням процесу, яке не хоче вперто працювати. Код - 369 ефективних рядків. Швидкодія ядра найвища серед усіх ядер Стріма. Коротше, по ходу справи буду пояснювати все. Наразі підправляю код, додаю коментарі, прикрашаю потихеньку (даю осмислені назви функціям та змінним, враховуючи капіталізацію (хто не зна такого терміну - фтопку :-))).

28.10.2006
15:01 - власноруч написана прога для вираховування числа pi працює з однаковою швидкістю у StreamOS і Linux.

29.10.2006
11:06 - схоже на те, що я зробив механізм повідомлень.

30.10.2006
14:23 - ніфіга шось не виходить заставити ці повідомлення нормально працювати. У мене тут виникла думка взагалі від них відмовитися, а зробити щось типу реєстрації процедур програм у якійсь таблиці (nobody, не бий мене, це, здається, твоя ідея).
16:31 - зробив.
19:16 - вважайте, ядро готове. Працює багатозадачність, сервіси, експорт процедур, таблиця системних викликів. А на додаток ще й dll перейменував на sef (Streamos Executable File). Ось так ;-).

1.11.2006
18:44 - відсилаю StreamOS 0.18 alpha2 на сайт.

5.11.2006
14:36 - підправляю код, вніс два системні виклики для роботи з параметрами. З'явилася ідея трохи переробити виклик експортних процедур на виклик експортних функцій (щоб якесь значення могли повертати).

7.11.2006 - вітання всім з великим святом ;)!
20:12 - виклик експортних процедур переробив. Я зараз трохи не в собі і буду працювати що зветься "до забуття".
20:13 - …ну треба ж якось повернутися у своє тіло ;)!…
20:21 - зробив людську таблицю системних викликів. Тепер це функції, а не процедури.

12.11.2006
14:51 - додав стиснення ядра, нові системні виклики для отримання версії ядра та поточної дати/часу і зробив щось типу uname.
14:58 - поновив credits (забув Blaze'а внести, дико вибачаюся).

17.11.2006
17:19 - зробив параметри ядра, тепер можна ініт вказувати безпосередньо при завантаженні ядра. Параметрами прог з ініту займуся, як приїду з Києва.

23.11.2006
21:59 - перебрався на нову вінду (WinXP SP2 Rus Corporate) під новим емулятором (VMWare Workstation 5.5.3). Також поставив Programmer's Notepad 2 (дякуючи nobody) - реально класна штука. Також написав сякий-такий TODO, буду хоч знати, що робити далі.

24.11.2006
16:35 - зробив можливість коментарів в init.run. Ідея nobody.
17:02 - переробив розбиття рядків. Знову ж ідея nobody, але на цей раз реалізація моя ;).
17:16 - зробив передачу параметрів прогам з init.run.
17:31 - переробив uname і системний виклик getkernelinfo. Тепер роздільно повертається ім'я ядра і його версія у типі record, а uname показує інфу згідно вказаним параметрам в командному рядку (в даному випадку параметри передаються через init.run). Unix way, аднака ;).

25.11.2006
22:51 - сьогодні лише поновив сайт та перевірив роботу ядра в емулі. Працює.

27.11.2006
21:32 - поновив сайт, виклав правила нумерації версій. Також поновив вантуз в емулі just for ніфіга_не_боліло ;).
21:42 - додав в uname параметр -c (--codename). Думаю, перекладати не треба. Поточне ядро - "Vorskla".

30.11.2006
21:25 - зробив пошук експортних процедур по їх назві. Тепер також при реєстрації експортної процедури необхідно вказувати її ім'я.

1.12.2006
17:52 - зробив от що: тепер при створенні процесу останньому передається унікальний ключ-ідентифікатор (1024-байтний), який генерується абсолютно випадково. Цей ключ використовується для виконання критичних системних викликів для того, щоби не допустити маскування одного процесу під інший. На швидкість це не дуже впливає. Генерування ключа відбувається за 40 мілісекунд на моєму компі під емулятором. Якщо процес передає ядру неправильний ключ, то системний виклик не виконується.
21:37 - до речі… гм… забув сказати… Добалакалися з Іваном про те, щоб портувати графічну оболонку Політу під Стрім. Ну не знаю, що з цього вийде, але хто ж проти ;)?
21:42 - поновив credits та copying.
21:49 - додав трохи коментарів до коду.

3.12.2006
14:06 - відформатував весь вихідний код по одному стандарту. Стандарт придумав сам і винесу його на сайт у "Правила…".
15:55 - викладую alpha4 на сайт. Консольний сервіс переноситься на alpha5.

5.12.2006
18:30 - частина нового консольного сервісу готова. Я обрав статичні віртуальні екрани з обмеженою кількість (зараз 6 - від 0 до 5). Процедури так само експортуються сервісом.
18:42 - зробив ініціалізацію всіх віртуальних дисплеїв. Тепер консольний сервіс вантажиться набагато довше. Хм…
18:48 - відтестував усе в емуляторі - досить швидко і стабільно. Працює :). Залишається зробити консольний ввід (передачу натиснених клавіш прогам знову ж таки через експортні процедури). От тільки не знаю, робити, щоб проги мали свої обробники процедур, чи робити, щоб сервіс надавав функцію отримання клавіші прогам…
19:45 - зробив весь консольний ввід/вивід. Щоправда іноді глючить, але це вже баги шукати будемо. Альфа5 готова ;).

7.12.2006
18:53 - так-с… тепер має не падати…
18:54 - упс… таки падає ;). Ну припустимо, хай падає… Тобто, падає не ядро, а додатки, і, мабуть же ж, у зв'язку з консольним сервісом… Здається мені, треба його переробити…
19:17 - переробив. Працює, навіть набагато швидше і стабільніше. Тепер кожен процес при реєстрації в консольному сервісі має вказувати функцію-обробник натиснених клавіш. Себто, усяке навантаження із сервісу знімається. Вах ;)!
19:20 - в емулі теж працює. Так, тепер чищу код.
19:38 - удівітєльно… в емулі працює - на реальному залізі вивалюється в "Invalid pointer operation" після обробітку хандлєра процесу… Ужос…
21:38 - блін, жоден емуль, ні вмваря ні куему не падає. На реальному залізі падає. Парадокс?

8.12.2006
21:19 - так, ну тепер точно знаю, що проблема не в ключах оптимізації коду… Залишається або стаб (у мене є стара версія, ось перевірю), або ж код… Хоча один і той самий код глючить/не глючить…
21:49 - помилку провокує код. На старому стабі теж так само. Ну нічо, щось придумаємо…

11.12.2006
21:02 - bochs рулить ніпадєццкі ;). Це поки що єдиний емулятор, який правильно емулює падіння Стріма :). Тепер мені не треба перевантажуватися для відлову багу.
21:46 - помилка стається після визову хандлера процеса, незалежно від того, чи в хандлері робиться виклик…
22:00 - якщо закоментувати код хандлера і залишити один writeln - працює…
22:08 - бяку знайшов. При присвоєнні аутстрінгу в хандлері значення вивалюємося. Чого, питається???
22:18 - я перехитрив цю кляту залізяку і заставив його все працювати з функцією str замість inttostr. (Загробний голос за кадром "бугага!!!").

15.12.2006
17:11 - написав кілька скриптів для девелоперів, щоб зручно інсталлити скомпільоване на дискету. Їду в Київ. Буду в неділю.

17.12.2006
11:57 - підготую до викладу на сайт бету1.
16:41 - підчистив код, заодно поставив sleep(10) в цикл консольному сервісу. Швидкість системи в цілому зросла вдвічі, а responsibility, помойму, ні жужу %).

20.12.2006
20:19 - зараз зроблю ще один тестовий додаток (інкремент), але бету2 не випускатиму - занесу прямо в рц1.
21:47 - облом-с, таварєсчі %). Падаємо. Має бути, одночасне використання експортних функцій тре забороняти. Гм…
21:52 - шось мені підказує, що блокуванням одиночних функцій тут не обійдешся. Що ж, ввесь модуль лочити?
21:53 - зате я бачу, що блокування-таки працює. Бенч іноді не видає рядок на екран через теж, що функція занята етім… інкрементом. І коли починаю виклик іншої функції - теж падаємо… Ладно, посмотрім-с…
21:57 - так. Блокування допомагає, але не в повній мірі. Хоча ядро вже не падає. То я тут подумав - може, блокування зробити в самому ядрі, а не на рівні сервісів?.. Танки грязі не бояцця ;).
22:07 - зробив, так шось без толку особо. Бум думать…
22:16 - ввів затримку перед викликом процедури - тепер бенч взагалі лише іноді показує інфу, а система як падала, так і падає. Мляццтво, клятий екстендер з його захистом. Мені тут, розумієте, треба простір для творчості, а не дрібні блохи виловлювати…
22:29 - підчистив код, прибрав зайвий системний виклик на отримання дати.

30.12.2006
19:56 - вичистив код повністю. Зробив форк ядра, який планую перетворити на моноліт, бо мікроядро страшно глюче і стає неконтрольованим.

2.01.2007 - ну, з наступившим ;)!
13:36 - довів до ума моноліт. Зараз працює все, окрім консольного вводу. Тут з'явився задум під'єднувати длл-ку консольного вводу/виводу безпосередньо до програм, а не через ядро…
13:39 - хоча ні, хай поки що працює через ядро, а там побачимо.
21:29 - все зробив, все працює (поки що %-)). Консольний ввід/вивід, багатодисплейність. Привів до порядку код. Трохи переставив системні виклики. Далі дореалізовую всі можливості displays.pp. Зараз спробую відтестити на реальному залізі.
21:57 - перевірив - працює. Зробив зручне використання системних викликів - кожному системному виклику відповідає його тип в types.pp, тому девелоперу тепер не треба повністю писати заголовок функції системного виклику, досить лише вказати тип. Ну наприклад замість "var findprocess:function(name:string):longint;" можна вказати лише "var findprocess:tsyscallsfindprocess".
23:00 - підправив історію %). Насправді, просто виправив тупі орфографічні помилки.
23:02 - виправив todo, зараз піду пити чайок і лягати спати.

3.01.2007
12:45 - дореалізовував функції displays.pp через системні виклики (тепер їх всього 19).
14:31 - зробив людський дебаг ядра.
14:48 - перевів errorman на юзання модуля дебагу. Для тих, хто не розрізняє дебаг і еррорман: дебаг просто виводить на екран повідомлення ядра, а еррорман може приймати певні рішення (ну, наприклад, зупинити систему).
14:55 - знайшов і виправив маленьке недопрацювання - uname реєструвало віртуальний дисплей, але не скасовувало реєстрацію.
14:58 - доробив ініт, щоб працював як всі нормальні додатки - через системні виклики.
15:00 - підправив bench.
15:41 - зробив блокування прямого виводу на дисплей під час його оновлення. Так менше глюче.

9.01.2007
21:03 - трохи ще попрацював над консольним вводом/виводом, зробив демки Блейзу з каментами. Тре буде відіслати…

19.01.2007
16:45 - виклав 15-го бету2. 22-го планую викласти рц1. Переніс розробку під Лінукс, написав скрипти компіляції ядра, зараз ще писатиму для прог.
17:09 - зробив.
17:40 - UPL тепер 2.9.
17:45 - так, довиправляв, наче, всі дрібниці. Їм і їду в Київ. Буду 21-го.

21.01.2007
09:40 - я вдома. Трохи підчистив код, передивлятимуся ще. Прийшла в голову ідея зробити доступною функцію стирання екрану. А на наступні релізи вже намічаю щось типу пакетної системи. Вже знаю, що проги будуть в каталогах, кожен файл запакований gzip'ом, а встановлення описуватиме щось типу маніфеста.
09:48 - стирання екрану зробив.
10:00 - додав системний виклик на визначення номера активного дисплея. Згодиться.

22.01.2007
15:42 - підчистив код, додав каменти. Майже виправив баг з перемиканням дисплеїв. Майже, себто майже не глюче, тільки ііііііноді ;).

24.01.2007
18:39 - виправив одну дірку в ядрі… Keyhandler був без перехвату виключень…

28.01.2007
17:02 - реліз. Пакуюся.
21:00 - почав роботу над 0.19 альфа1. Зробив механізм повідомлень + 2 тестові проги. На диво, все працює. Ядро не падає. Дає знати про себе логічна продуманість ядра ;). Серйозно, все класно! До речі, 0.18 спакував, записав і завтра викладаю.
21:03 - поновив туду-ліст. На цей реліз поки що переніс тільки шелл. Якщо вправлюся з ним швидко - приступлю до ЛівСД. З шеллом все впирається в Nobody, бо у нього він є, але де ж сам Nobody :)?

31.01.2007
16:41 - шелл є, до того ж робочий. Також переробив систему повідомлень (за порадою того ж Nobody) на вказівники. Тепер тре буде трохи подумати над консольним вводом, бо іноді підглюкує. Але загалом система працює стабільно.

1.02.2007
22:01 - хм… куему як завжди тупить, вмваря та бош запускають Стрім без проблем.
22:05 - трохи підчистив код.
22:33 - сів за переписування шеллу (да простить мене Ноубоді - не подобається мені трохи його код, але всі ідеї беру із його коду, тому перше місце в копірайтах - його ;)). Також видалив нафіг хеловорлд за непотрібністю (відповідне юзання системного виклику отримання поточного дисплею переніс в шелл).

2.02.2007
16:10 - майже довів до людського стану шелл. Тепер він може запускати проги, також працює бекспейс, тобто можна виправити помилку в рядку. Для цього прийшлося здвигати системні виклики і вносити новий.
16:22 - викинув incr і key - їх замінили відповідно jump і sshell. Це я про проги, як хто не поняв ;).
18:36 - додав системний виклик на отримання номера першого пустого дисплею.
18:49 - зробив шось типу команди ls.
19:16 - ввів батьківський дисплей, щоби прога могла працювати на тому дисплеї, з якого її запустили. Відповідно, ввів системний виклик.

3.02.2007 - рівно рік, як я безперервно юзаю Лінукс. З чим себе і вітаю :).
22:20 - зробив системний виклик на отримання стану процеса, відповідно, прикрутив до шелла фічу чекати на завершення запущеного процеса. Здвинув системні виклики, через що знову порушив нумерацію, і фіг старі проги будуть працювати з новою альфою ;). Ввів заглушки на майбутнє щодо terminate і kill процесів.

8.02.2007
20:31 - прикрутив приорітети. Зробив відповідну прогу renice. Толком ще не тестував, знаю лише, що воно таки встановлює необхідні приорітети ;). Сам вплив на фізику ядра і процесів поки що не відчув.

9.02.2007
16:21 - додав системний виклик на передачу цілого текстового буферу на дисплей. Плюс до цього всього перелопатив всю структуру файлової системи, тепер вона подібна до Лінуксової.
23:23 - прикрутив дрова до сідірома. Працюють, буду тестувати.
23:30 - прикрутив keyrus.

10.02.2007
13:06 - зробив тестовий лівсд. Проги вантажаться з сд-диска.

14.02.2007
12:41 - прибрав перевірку ключа доступу на некритичні системні виклики.
13:13 - переставив місцями системні виклики. Для краси ;). Звичайно, збив усю таблицю.
14:05 - зробив хитре завантаження модулів ядра - через окремий юніт, кожна процедура модуля окремо, а не цілий модуль. Це дає можливість завантажувати/вивантажувати модулі тоді, коли треба, а також позбавило Стрім одного неприємного бага з першим запуском ядра, коли дисплейз не встигали підвантажуватися. Зараз все ОК.

15.02.2007
18:40 - повністю перейшов на юзання лівсд. На флоппі (тіпа загрузочний образ) залишив дрова і деякі модулі.

16.02.2007
14:23 - TODO-list пустий. Щойно зробив вимкнення/перезавантаження/сплячку системи.
15:07 - до речі, вчора і сьогодні вночі довго сперечався з nobody чи варто йому дати можливість закрити код Стріма для свого форку. Чудак він - кому нафіг Стрім треба буде, щоб так код закривати. При тому, і для мене, виходить, теж код буде закритий у випадку продажу його форку… Тобто, код буде, може, і відкритий, але юзати його (ідеї, не власне код) я не зможу. Щяс :).

18.02.2007
10:46 - підправив ls.

3.03.2007
18:06 - виклав альфу1, ніяк не візьмуся робити далі. Зате нам дали місце на sf.net. І я змінюю Ліцензію на GPL.
21:57 - переліцензіював весь код… Жаль УПЛ, але що ж поробиш…
22:06 - написав скрипти автоматичної компіляції і встановлення всіх програм заразом. Зручно.
22:22 - перелопатив трохи структуру ісошки, все, що можна, виніс на СД, все, що не зміг, залишив на віртуальному флопіку.
22:33 - пошаманив з опціями оптимізації коду, приріст швидкості - 33 відсотки. Гигиги хрррррррррррррр :)!

10.03.2007
21:28 - розпочав створення cd.

30.03.2007
22:35 - сачкую ;). Насправді, за цей час я знайшов два пристойних сервака для зберігання усіх файлів. Плюс до того, продовжую робити cd. Майже працює.
22:36 - є ще ідея зробити keyhandler і messagehandler обов'язковими… Але це лише думка, власне фактичного наукового обґрунтування вона не має ;).
23:00 - щойно без проблем запустив Стрім під Лінуксом, як звичайний додаток. Цікаво…

5.04.2007
16:43 - тепер для всіх додатків обов'язковий експорт обробників клавіш і повідомлень. Так менше ядерного коду.

20.04.2007
22:06 - все довбуся з тим клятим глюкавим вловлювачем натиснень клавіш. Виніс його в окремий потік. Ніфіга не помагає. Грішу на екстендер :(.
22:33 - плюнув на все і перевів обробку повідомлень в окремий поток ;). А пофіг ібо нєфіг :-P.
22:40 - я реально натуральний камікадзе ;). Виокремив обробіток кожного натиснення в окремий потік. Працює ;).
22:45 - трохи перебудував виловлення виключень. Думаю викласти таки альфу2 на сайт.

21.04.2007
15:41 - виклав альфу 2. Переніс виконання головного потоку процесу в окремий модуль managers.
15:53 - офігєть. Вбивання процесів працює.

23.04.2007
15:16 - змінив спосіб експорту функцій на більш простий.
15:49 - змінив скрипти компіляції так, щоб було, по-перше, зручно їх юзати, а по-друге, щоб зручно змінювати. Тепер процедура компіляції одна на всіх, підставляються лише параметри. Thanks to Farcaller :).
18:45 - дописав експортні процедури, написав тести на них. Працює.
19:49 - трохи переформатував код. Параметри в заголовках процедур розбив на рядки по типах.
20:04 - покоментував трохи код. Ще не закінчив.
22:00 - зробив зручний імпорт системних викликів. Без зайвих рухів підключається модуль і викликається процедура. Все. Можна юзати. Ніяких ручних імпортів. Занесу в ТУДУ ще пошук номеру виклика за назвою. І треба ще присвоювання буферу дисплея переробити…

24.04.2007
15:34 - спасибі nobody, підмітив, що можна запустити резидентний завантажник і грузити нативні win32-файли в досі без змін. Я спробував - о, чудо! Стрім став менше падати (тьху-тьху-тьху). За… як же добре ;).
16:30 - знову ідея nobody: переробив імпорт системних викликів так, щоб тепер навіть у новому модулі не юзалися абсолютні номера системних викликів. Тепер вони визначаються за іменами викликів.

28.04.2007
19:08 - форматую потихеньку код… Прийшла ще в голову ідея робити таймери.

2.05.2007
17:06 - зробив керування внутрішнім таймером через змінну і через параметр ядра. + до цього всього переробив присвоювання буферу дисплея.
17:24 - написав прогу, яка може міняти інтервал внутрішнього таймеру. Ця прога зветься kparam і буде юзатися в подальшому як основна прога для зміни параметрів ядра.

4.05.2007
16:49 - зробив оптимізацію компіляції на різні проци в скриптах. Все це керується змінними оточення.

12.05.2007
17:08 - підготую третю альфу, викладу в понеділок. До речі, маю сказати, що в dosemu StreamOS працює успішніше, ніж в інших емуляторах, а також ніж на звичайному компі ;).

19.05.2007
14:33 - дрібне виправлення з таймером та нові скрипти для встановлення StreamOS під dosemu.

27.05.2007
13:34 - граюся із вбиванням процесів, так здається, що всі можливості впираються в стаб.
13:40 - зробив нормальне засинання після запуску внутрішнього keyhandler'а.

28.05.2007
13:06 - зменшив глючність вбивання процесів та трохи покращив отримання інфи про процеси.

29.05.2007 - 42 бали на вступних випробуваннях в НТУУ "КПІ". Я майже студент.
19:08 - докоментував код ядра.
22:47 - відмовився від стиснення ядра. Так працює стабільніше.

31.05.2007 - останній дзвінок
14:20 - трохи покращив шелл.
14:57 - майже привів до людського вигляду cd. Воно працює!
17:55 - вніс до TODO пункт "користувачі". Авторизація в системі і права доступа - ось саме це буде приорітетом на 0.20.

4.06.2007
14:54 - написав кістяк login'а, переніс в директорію devel. На наступний реліз.
17:37 - вирішив змінити систему нумерації версій Стріма. Тепер вони матимуть вигляд x.y.z без будь-яких постфіксів. Почну з версії 0.19.4.
17:56 - прикрутив логін в систему (фіксований логін/пароль, але це тимчасово) та переведення процесів з командного рядка в фон (як в *nix).
18:31 - паролі зберігаються у файлі \etc\shadow, причому прогнані через прикручену функцію md5. Логін використовує цей файл. Я сижу і тихо балдєю :).
21:27 - зробив користувачів в кращому вигляді, аж самому подобається. Лишається лише почистити код та привести його в порядок, але зараз ВСЕ працює.
21:47 - ще причесав шелл. Поки все, сьогодні багато вдалося зробити.

5.06.2007
12:08 - тільки root тепер може змінювати частоту системного таймера.
12:19 - зробив logout, але треба ще буде зробити людське завершення роботи шеллу.
16:07 - переробив logout, все тепер нормально. Ця функція покладена на шелл, який при завершенні роботи запускає логін.

9.06.2007
15:07 - зробив useradd.
15:14 - причесав useradd (довів до кондиції), а також пофіксив баг в шеллі.
15:26 - прибрав himem за непотрібністю.
15:46 - трохи погрався із стартовими скриптами.
16:14 - поставив оптимізоване ядро фрідоса.
16:26 - погрався з дровами на сідюк, начебто, врубив УДМА2 йому…
16:47 - відтестив все на реальному компі, УДМА2 таке як працює. Помітив спад швидкості по бенчу, але то не критично. Головне, що все більш-менш стабільно працює.

11.06.2007
14:39 - трохи покращив bench.
15:07 - переробив вхід до системи, тепер через getty. Вперше запустив двох юзверів, але тут проявилася трабла з двома однаковими процесами. Щось думатиму, вже є певні ідеї…

13.06.2007
14:38 - проблема з двома однаковими процесами вирішена. От скажіть, що я не хитрий: створюється диск в пам'яті, на який копіюються файли процесів, перейменовуються у відповідності до PID'а і запускаються. Таким чином у програми завжди буде свій особистий файл, і нічого абсолютно не глючитиме. Бугага :)…
17:52 - підредагував стартові скрипти. Тепер важливо зробити видалення тимчасових файлів з рам-диску після знищення процесу та доробити права доступа, а то не гоже юзеру знімати рутові процеси :).

14.06.2007
16:50 - виклав 0.19.4 на сайт. Зробив автоматичне видалення тимчасових файлів з диску Z:.
17:01 - додав обмеження на вбивання лише своїх процесів.
17:16 - заблокував паралельне використання створення процесів на стадії копіювання файлу, бо глюче. На швидкість впливати повинно не суттєво.
18:19 - переробив під корінь інтерфейс системних викликів через імпорт так, як сказав Nobody. Тепер нема потреби вводити pid і accesskey для кожного виклику. Старий інтерфейс збережено на випадок делегування можливостей керування одного процесу іншим через переданий ключ.

15.06.2007
12:42 - виправив баг у створенні процесу, не перевірялося значення, яке поверталось після filesearch, при завантаженні неіснуючих процесів система висла.
12:52 - поновив CREDITS.

18.06.2007
12:34 - переробив механізм блокування консольного виводу. Тепер все по принципу - встиг - пиши. Не встиг - чекай. Реалізація проста і, ІМХО, ефективна. Також зменшив затримку на очікування розблокування процедури запуску процеса.
12:39 - getty тепер не завершує свою роботу, а висить в очікуванні (sleep(-1)) і тримає дисплей відкритим. Так зручніше. А файл історії тим часом перевалив за 200 тисяч байт :).
12:54 - написав роздільні скрипти компіляції для ядра і displays.
15:11 - з Блейзом домовився про лого і придумали слоган для Стріма: "Advantages in simplest ways". А скажіть, шо не так ;)!
15:58 - переформатував код, повставляв копірайти, виправив кілька багфіксів і додав параметр -a в uname.
20:03 - доформатував код в програмах та переробив suspend і poweroff - тепер вони видають помилки, якщо вдрух не можуть виконатися.
22:20 - знову переробив механізм блокування консольного виводу. Тепер він діє набагато "розумніше" і блокує те, що треба блокувати.

19.06.2007
9:56 - трохи вдосконалив систему повідомлень (зробив ідентифікатори повідомлень).
14:43 - зробив видалення користувачів, трохи підправив useradd.
21:51 - підправив заголовки процедур в прогах. Думаю, як би його визначати кількість пам'яті…

20.06.2007
16:02 - трохи переробив визначення імені файлу при завантаженні процесу.
16:34 - відкоригував ініціалізацію змінних у функції створення процесу, також переробив дебаг-повідомлення. До речі, Блейз прислав лого, яке я маю намір вже закачати, як тільки доберуся до більш-менш нормального нета.
20:46 - init тепер не завершує свою роботу. Робиться це на майбутнє (дерево процесів тіпа).
22:35 - в devel почав робити printf.

21.06.2007
11:53 - працюю над тим, щоб ядро представляти у вигляді процесу.
12:17 - в принципі, зробив, бо повідомлення вже працюють.

24.06.2007
19:52 - фактично зробив дерево процесів, тепер є більш-менш жорстке обмеження процесів у правах, до того ж переробив знову вхід до системи, все тепер навішено на логін, а гетті відсутнє.
20:00 - а, ну забув сказати, що ядро тепер як процес.

26.06.2007
12:38 - виклав вчора 0.19.5 на сайт. Сьогодні почав виписувати доку по системі.
18:44 - трохи підправив шелл.
18:48 - ну тепер можу точно сказати про ще один баг - якщо завершувати процес, який виконує інший процес, то ядро вилітає. Для цього треба вбивати все дерево процесів. Буду думати алгоритм обходу…
19:11 - додав скрипт запуску Стріма в bochs. Святий Патрік, як же воно там гальмує…
19:18 - перелопатив трохи інші скрипти.

3.07.2007
19:46 - так як ГПЛ 3 вийшла і мені подобається, я переходжу на неї.
21:28 - перевів всі файли.

4.07.2007
12:43 - трохи переробив механізм блокування в ядрі. Тепер на критичних секціях силами менеджера потоків, а не ізвратами з булевими змінними :). Не впевнений, звичайно, у надійності, але воно працює так, як треба. Буду тестувати.

18.07.2007
16:44 - поновив HX Runtime.
18:15 - трохи підправив UPL, але це вже, в принципі, до діла не відноситься, бо Стрім під ГПЛ 3.

24.09.2007
21:17 - поновив TODO.
21:28 - зробив вивід внутрішніх дебаг-повідомлень. Реалізовано через окрему опцію конфігу ядра.
21:31 - викинув нереалізований free.

25.09.2007
00:12 - коментую код.
00:18 - переробив трохи цикли очікування в шеллі. Тепер затримка напряму прив'язана до частоти системного таймеру, шо є гут.
00:24 - зробив опцію для kill - all. Вбиває все, крім себе, внаслідок чого системі сниться суїцид.

27.09.2007
22:58 - спростив дебаг.
23:18 - скомпілив Стрім фпц 2.2.0. Все ок.

5.10.2007
20:52 - підправив логін.

17.11.2007 - з Днем студента :)!
17:48 - розібрався із своїм printf'ом, продовжую його реалізовувати.

31.12.2007 - з наступаючим :)!
13:43 - переробив трохи скрипти компіляції, довів до ума збирання модів через dosemu.
16:45 - StreamOS працював більше години з bench'ом та іноді top'ом під dosemu. Витримало.

7.01.2008
17:06 - переводжу код під UPLv3.1. Також підправив доку.
20:19 - перевів. Плюс до того, більше не існує системного виклику "вбити процес". Замість нього процесу посилається сигнал, прям так, як в Лінуксі, 9-й або 6-й сигнал якраз і означає прибиття процесу. В обробнику сигналів процесу можна занести перевірку на посилку 15-го сигналу, щоб коректно завершити роботу програми. Зараз це реалізовано для bench'а.

13.01.2008
22:19 - почав реалізовувати дерево процесів, підправив top. 11-го нам було 3 роки. Вітаю :).

14.01.2008
12:33 - тепер top виводить "дітей" процесу.
13:50 - ще дописав скрипти встановлення і компіляції. Фройд би плакав.
22:42 - дописав трохи top. Вирішив викласти нову версію Стріма на сайт. Трохи підрихтував Ліцензію, версія та сама.

16.01.2008 - здав вишку на 4, стіпухі бути :)
17:35 - виправив багу, через яку ініт не зачислювався до дітей ядра. Окрім ініта, прямих потомків ядра нема.
17:37 - обдумую можливість винесення керування завантаженням модулів в юзерспейс. Типу modprobe. Почав писати код, але він поки закоментований.
18:09 - виніс керування модулями за ядро, зробив відповідний системний виклик і прогу modprobe. Іноді падає періодично при запуску, без причини, ІМХО просто затримка в завантаження модуля.
18:17 - резервна копія зі старою моделлю модулів зберіг :). Про всяк випадок. А це дороблю ще.

17.01.2008 - сесію здав, завтра додому
14:29 - ще погрався з модулями, все рівно чогось не можу їх завантажити так, щоб перші проги не падали…

18.01.2008
00:46 - повернув все назад. Бо глючило.

23.02.2008
00:04 - переписав скрипти збирання ядра, тепер дуже зручно, компактно і просто. Планую також так зробити для програм, плюс до того тре поновити відповідну доку по компіляції.

24.02.2008
01:14 - почав переписувати скрипти для програм.
11:43 - скрипти переписані.

4.06.2008
17:02 - місяць не було ноута, перед тим ніколи було… Підправив скрипти компіляції.

10.06.2008
19:24 - підправив документацію.

25.07.2008
14:33 - ніяк не додумаюся, як зробити pstree. Поновив Ліцензію до UPLv3.2.

29.07.2008
12:13 - перевів таки Стрім на Меркуріал. Тепер є єдине дерево сирців, патчів більше не випускатиму, сподіваюся. Думаю над реалізацією СтрімФС, а також над тим, кому спихнути реалізацію pstree :).
18:41 - почав реалізацію СтрімФС, зробив функції трансляції імен по /etc/fstab.
22:26 - маємо підтримку hostname, покращений дебаг, фікси в скриптах і kparam перейменований в sysctl (прівєт, Прожер :)).

1.08.2008
18:14 - більше ніякого вайна. + деякі дрібні фікси. В комміт!

2.08.2008
11:50 - ввів новий системний виклик для assign'а текстових файлів через VFS. Ядро, init і login вже так і працюють.
14:53 - StreamFS v0.1.

3.08.2008
18:07 - через неактивність nobody вирулюємо його з MAINTAINERS в CREDITS.
18:29 - поновив документацію.

5.08.2008
00:49 - все, тепер все ядро збирається напряму через лінуксовий fpc, але наразі маємо зламаний reboot через те, що apmlib своєю рібутною частиною не компілиться в fpc 2.2.0. Буду розбиратися.
12:28 - reboot знову працює дякуючи товарісчам з forum.sources.ru.
16:44 - переробив дебаг і виправив локальне блокування, тепер ядро в теорії взагалі не має падати. Поки і не падає більше :).

6.08.2008
20:48 - багато багфіксів дебага і файлової системи. Поновлення файлової системи до 0.2, нормальна робота як live-cd.

7.08.2008
21:54 - написав генерацію ісошки з нуля, повністю автоматизована робота, в т. ч. скачування бінарників з інету і т. д. Після однієї команди на виході отримуємо ісошку.

12.12.2008
00:42 - після довгої перерви, дріб’язкового оформлення коду та вирішення проблеми з HX, я знову взявся за Стрім. Маю повідомити, що чувак Japheth доволі оперативно реагує на багрепорти, а чувакам з команди фріпаскаля великий мінус за проблєми :). Наразі все працює файно.
14:15 - форматую код. Також покращив скрипт створення ісошки.

13.12.2008
19:46 - трохи пофіксив jump і скрипти збірки.

19.12.2008
17:09 - додав підтримку та реалізацію програмних таймерів.

1.01.2009 - з Новим роком!
23:09 - багато працював і з підсистемою блокування, і з повідомленнями, і з натисненням клавіш, і з таймерами (фікси-фікси-фікси), і з менеджером пам’яті… Зараз думаю почати другий етап StreamFS – довгі імена, журнал і т. д. Правда, концепцію довгих імен ще не придумав, як і СтрімФС взагалі. Швидше за все, натуральні файли будуть дублюватися метафайлами в якомусь каталозі. Так просто, зручно і надійно.

6.01.2009
14:36 - готуватиму 0.2 до випуску.

7.01.2009
15:22 - випустив 0.2, граюся з git.
15:26 - намагаюся синхронізувати гіт з меркуріалом автоматично.

20.01.2009
01:06 - перевів все на git, поновив ліцензію.

22.03.2009
16:39 - переструктував дерево сирців, тепер блоби доступні прямо із гіта, хоч це і не ідейно, зате зручно. Думаю погратися з виносом із ядра консолі. Вкотре.

24.04.2009
16:19 - переробив завантаження модулів ядра, пофіксив баги з підсистемою блокування, перевів модуль консолі на цю систему блокування, вичистив деякі баги та більше розпаралелив ядро. Не так часто і пишу сюди, в історію, адже тепер для історії є гіт, але це не означає, що я рідко щось роблю. Просто по наявності натхнення.

2.05.2009
19:30 - додав cat, переробив структуру і парсинг конфігураційних файлів.

6.06.2009
19:11 - думаю, треба перепланувати підсистему блокування з використанням існуючих примітивів, бо коли добираєшся до блокування всього критичного, то самі блокування стають настільки глобальними, що гальмуються навіть найпримітивніші операції. Думаю, необхідно в першу чергу відмінити блокування всієї черги процесів для роботи з одним із них, змінивши сам принцип черги і перейшовши від нумерованого масиву до зв’язаних списків.

9.09.2009
21:38 - розібрався з підсистемами блокування, повідомлень і таймерів у простий і елегантний спосіб. Підсистема блокування використовується тільки локально (не всюди так, але у 99% саме так), підсистема повідомлень та таймерів взагалі розпаралелені по саме німагу, так, що кожне повідомлення чи кожен таймер крутиться в окремому потоці, при чому більше нема нескінченних циклів, які цим керують і жеруть 100% часу ЦП. По ходу справи виправляю деякі баги, готую або рц3, або, що малоймовірно, реліз.
21:41 - власне, все заплановане на цей реліз вже виконано, хоча я от думаю, чи варто включати сюди ще й пунктик документації, чи сконцентруватися на ньому в наступному релізі…
